{"ast":null,"code":"var _jsxFileName = \"E:\\\\Python\\\\TSensor\\\\tempmonitoring\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { FiThermometer, FiDroplet, FiSun, FiCloud } from 'react-icons/fi';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_LATEST_URL = 'http://127.0.0.1:5000/api/sensor-data';\nconst API_HISTORY_URL = 'http://127.0.0.1:5000/api/sensor-history';\n\n// Professional color palette\nconst COLORS = {\n  temperature: '#00509d',\n  humidity: '#007ba7',\n  heatIndex: '#dc5600',\n  dewPoint: '#7e7e7e'\n};\n\n// Component for a single sensor card on the main dashboard\nconst SensorSummaryCard = ({\n  sensor,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-summary-card\",\n    onClick: () => onClick(sensor),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sensor-name\",\n        children: sensor.sensor_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(FiThermometer, {\n          className: \"metric-icon temp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Temp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value temp\",\n          children: [sensor.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(FiDroplet, {\n          className: \"metric-icon humid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Humidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value humid\",\n          children: [sensor.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(FiSun, {\n          className: \"metric-icon heat-idx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Heat Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value heat-idx\",\n          children: [sensor.heat_index, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(FiCloud, {\n          className: \"metric-icon dew-pt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-label\",\n          children: \"Dew Point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"metric-value dew-pt\",\n          children: [sensor.dew_point, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n// Component for the detailed, drill-down view\n_c = SensorSummaryCard;\nconst SensorDetailView = ({\n  sensor,\n  onClose\n}) => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [activeRange, setActiveRange] = useState('daily');\n  const fetchHistory = async range => {\n    try {\n      const url = `${API_HISTORY_URL}?sensor_name=${sensor.sensor_name}&time_range=${range}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setHistory(data);\n    } catch (error) {\n      console.error(\"Failed to fetch history:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchHistory(activeRange);\n  }, [activeRange, sensor.sensor_name]);\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    if (activeRange === 'daily') {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (activeRange === 'weekly') {\n      return date.toLocaleDateString([], {\n        weekday: 'short'\n      });\n    } else {\n      return date.toLocaleDateString([], {\n        month: 'short',\n        day: 'numeric'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: onClose,\n      children: \"\\u2190 Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"detail-view-title\",\n      children: [sensor.sensor_name, \" Metrics\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-range-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveRange('daily'),\n        className: activeRange === 'daily' ? 'active' : '',\n        children: \"Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveRange('weekly'),\n        className: activeRange === 'weekly' ? 'active' : '',\n        children: \"Weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveRange('monthly'),\n        className: activeRange === 'monthly' ? 'active' : '',\n        children: \"Monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: history,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e0e0e0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"timestamp\",\n            tickFormatter: formatTimestamp,\n            stroke: \"#bdbdbd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            stroke: \"#bdbdbd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"temperature\",\n            stroke: COLORS.temperature,\n            name: \"Temperature\",\n            strokeWidth: 2,\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"humidity\",\n            stroke: COLORS.humidity,\n            name: \"Humidity\",\n            strokeWidth: 2,\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"heat_index\",\n            stroke: COLORS.heatIndex,\n            name: \"Heat Index\",\n            strokeWidth: 2,\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"dew_point\",\n            stroke: COLORS.dewPoint,\n            name: \"Dew Point\",\n            strokeWidth: 2,\n            dot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n// Main App Component\n_s(SensorDetailView, \"zF7JMKPidpnG7UD+tLwE8mhy3sM=\");\n_c2 = SensorDetailView;\nfunction Dashboard() {\n  _s2();\n  const [sensorData, setSensorData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(API_LATEST_URL);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSensorData(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading sensor data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 23\n  }, this);\n  if (selectedSensor) {\n    return /*#__PURE__*/_jsxDEV(SensorDetailView, {\n      sensor: selectedSensor,\n      onClose: () => setSelectedSensor(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Sensor Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-subtitle\",\n        children: \"Live and historical data overview.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensors-grid\",\n      children: sensorData.map(sensor => /*#__PURE__*/_jsxDEV(SensorSummaryCard, {\n        sensor: sensor,\n        onClick: setSelectedSensor\n      }, sensor.sensor_name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s2(Dashboard, \"ShJedQa5ue47gsW5LJBG0b2yUxI=\");\n_c3 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SensorSummaryCard\");\n$RefreshReg$(_c2, \"SensorDetailView\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","FiThermometer","FiDroplet","FiSun","FiCloud","jsxDEV","_jsxDEV","API_LATEST_URL","API_HISTORY_URL","COLORS","temperature","humidity","heatIndex","dewPoint","SensorSummaryCard","sensor","onClick","className","children","sensor_name","fileName","_jsxFileName","lineNumber","columnNumber","heat_index","dew_point","_c","SensorDetailView","onClose","_s","history","setHistory","activeRange","setActiveRange","fetchHistory","range","url","response","fetch","data","json","error","console","formatTimestamp","timestamp","date","Date","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","width","height","strokeDasharray","stroke","dataKey","tickFormatter","type","name","strokeWidth","dot","_c2","Dashboard","_s2","sensorData","setSensorData","loading","setLoading","setError","selectedSensor","setSelectedSensor","fetchData","ok","Error","status","interval","setInterval","clearInterval","message","map","_c3","$RefreshReg$"],"sources":["E:/Python/TSensor/tempmonitoring/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport { FiThermometer, FiDroplet, FiSun, FiCloud } from 'react-icons/fi';\r\nimport './Dashboard.css';\r\n\r\nconst API_LATEST_URL = 'http://127.0.0.1:5000/api/sensor-data';\r\nconst API_HISTORY_URL = 'http://127.0.0.1:5000/api/sensor-history';\r\n\r\n// Professional color palette\r\nconst COLORS = {\r\n  temperature: '#00509d',\r\n  humidity: '#007ba7',\r\n  heatIndex: '#dc5600',\r\n  dewPoint: '#7e7e7e',\r\n};\r\n\r\n// Component for a single sensor card on the main dashboard\r\nconst SensorSummaryCard = ({ sensor, onClick }) => {\r\n    return (\r\n        <div className=\"sensor-summary-card\" onClick={() => onClick(sensor)}>\r\n            <div className=\"card-header\">\r\n                <h2 className=\"sensor-name\">{sensor.sensor_name}</h2>\r\n            </div>\r\n            <div className=\"metrics-summary\">\r\n                <div className=\"metric\">\r\n                    <FiThermometer className=\"metric-icon temp\" />\r\n                    <span className=\"metric-label\">Temp</span>\r\n                    <span className=\"metric-value temp\">{sensor.temperature}°C</span>\r\n                </div>\r\n                <div className=\"metric\">\r\n                    <FiDroplet className=\"metric-icon humid\" />\r\n                    <span className=\"metric-label\">Humidity</span>\r\n                    <span className=\"metric-value humid\">{sensor.humidity}%</span>\r\n                </div>\r\n                <div className=\"metric\">\r\n                    <FiSun className=\"metric-icon heat-idx\" />\r\n                    <span className=\"metric-label\">Heat Index</span>\r\n                    <span className=\"metric-value heat-idx\">{sensor.heat_index}°C</span>\r\n                </div>\r\n                <div className=\"metric\">\r\n                    <FiCloud className=\"metric-icon dew-pt\" />\r\n                    <span className=\"metric-label\">Dew Point</span>\r\n                    <span className=\"metric-value dew-pt\">{sensor.dew_point}°C</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Component for the detailed, drill-down view\r\nconst SensorDetailView = ({ sensor, onClose }) => {\r\n    const [history, setHistory] = useState([]);\r\n    const [activeRange, setActiveRange] = useState('daily');\r\n\r\n    const fetchHistory = async (range) => {\r\n        try {\r\n            const url = `${API_HISTORY_URL}?sensor_name=${sensor.sensor_name}&time_range=${range}`;\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setHistory(data);\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch history:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchHistory(activeRange);\r\n    }, [activeRange, sensor.sensor_name]);\r\n\r\n    const formatTimestamp = (timestamp) => {\r\n        const date = new Date(timestamp);\r\n        if (activeRange === 'daily') {\r\n            return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n        } else if (activeRange === 'weekly') {\r\n            return date.toLocaleDateString([], { weekday: 'short' });\r\n        } else {\r\n            return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"detail-view-container\">\r\n            <button className=\"back-button\" onClick={onClose}>&larr; Back to Dashboard</button>\r\n            <h2 className=\"detail-view-title\">{sensor.sensor_name} Metrics</h2>\r\n            \r\n            <div className=\"time-range-tabs\">\r\n                <button onClick={() => setActiveRange('daily')} className={activeRange === 'daily' ? 'active' : ''}>Daily</button>\r\n                <button onClick={() => setActiveRange('weekly')} className={activeRange === 'weekly' ? 'active' : ''}>Weekly</button>\r\n                <button onClick={() => setActiveRange('monthly')} className={activeRange === 'monthly' ? 'active' : ''}>Monthly</button>\r\n            </div>\r\n\r\n            <div className=\"sensor-chart-container\">\r\n                <ResponsiveContainer width=\"100%\" height={400}>\r\n                    <LineChart data={history}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\r\n                        <XAxis dataKey=\"timestamp\" tickFormatter={formatTimestamp} stroke=\"#bdbdbd\" />\r\n                        <YAxis stroke=\"#bdbdbd\" />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"temperature\" stroke={COLORS.temperature} name=\"Temperature\" strokeWidth={2} dot={false} />\r\n                        <Line type=\"monotone\" dataKey=\"humidity\" stroke={COLORS.humidity} name=\"Humidity\" strokeWidth={2} dot={false} />\r\n                        <Line type=\"monotone\" dataKey=\"heat_index\" stroke={COLORS.heatIndex} name=\"Heat Index\" strokeWidth={2} dot={false} />\r\n                        <Line type=\"monotone\" dataKey=\"dew_point\" stroke={COLORS.dewPoint} name=\"Dew Point\" strokeWidth={2} dot={false} />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Main App Component\r\nfunction Dashboard() {\r\n    const [sensorData, setSensorData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedSensor, setSelectedSensor] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(API_LATEST_URL);\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                setSensorData(data);\r\n            } catch (error) {\r\n                setError(error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchData();\r\n        const interval = setInterval(fetchData, 5000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    if (loading) return <div className=\"loading\">Loading sensor data...</div>;\r\n    if (error) return <div className=\"error\">Error: {error.message}</div>;\r\n\r\n    if (selectedSensor) {\r\n        return <SensorDetailView sensor={selectedSensor} onClose={() => setSelectedSensor(null)} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div className=\"dashboard-header-container\">\r\n                <h1 className=\"dashboard-title\">Sensor Metrics</h1>\r\n                <p className=\"dashboard-subtitle\">Live and historical data overview.</p>\r\n            </div>\r\n            <div className=\"sensors-grid\">\r\n                {sensorData.map((sensor) => (\r\n                    <SensorSummaryCard key={sensor.sensor_name} sensor={sensor} onClick={setSelectedSensor} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}