{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\Welcome\\\\Welcome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Thermometer, Droplets, Activity, Server, AlertCircle, Clock, CheckCircle } from \"lucide-react\";\nimport axios from \"axios\";\nimport \"./Welcome.css\"; // Assuming your styling remains in Welcome.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://sensorium-api.vercel.app/api\";\nconst WelcomePage = () => {\n  _s();\n  const [data, setData] = useState({\n    totalDevices: 0,\n    activeSensors: 0,\n    avgTemperature: null,\n    avgHumidity: null,\n    activeAlerts: 0\n  });\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n  const [recentEvents, setRecentEvents] = useState([]); // State for live recent events\n\n  const fetchData = async () => {\n    try {\n      // 1. Fetch All Sensor Readings\n      const sensorsRes = await axios.get(`${API_BASE_URL}/digital-sensors`);\n      const allSensors = sensorsRes.data;\n\n      // 2. Aggregate Data\n      let totalTemp = 0;\n      let totalHumidity = 0;\n      let activeAlerts = 0;\n      const deviceIds = new Set();\n      const activeSensorIds = new Set();\n      const events = [];\n      allSensors.forEach(sensor => {\n        // Collect Device IDs and Active Sensor IDs\n        if (sensor.deviceId) deviceIds.add(sensor.deviceId);\n        if (sensor.isActive) activeSensorIds.add(sensor.id);\n\n        // Aggregate Temperature and Humidity\n        if (typeof sensor.temperature === 'number') {\n          totalTemp += sensor.temperature;\n        }\n        if (typeof sensor.humidity === 'number') {\n          totalHumidity += sensor.humidity;\n        }\n\n        // Check for Alerts (Assuming an 'isAlert' flag or threshold breach)\n        // You might need to adjust this logic based on your API's alert structure\n        if (sensor.isAlert || sensor.temperature > 30) {\n          activeAlerts += 1;\n          events.push({\n            id: sensor.id,\n            type: \"Alert\",\n            device: sensor.deviceId || 'N/A',\n            value: `Temp: ${sensor.temperature}°C`,\n            status: \"Alert\"\n          });\n        } else {\n          // Add nominal events (only show the last few for clarity)\n          events.push({\n            id: sensor.id,\n            type: \"Temperature\",\n            device: sensor.deviceId || 'N/A',\n            value: `${sensor.temperature}°C`,\n            status: \"Nominal\"\n          });\n        }\n      });\n\n      // Calculate Averages\n      const numReadings = allSensors.length;\n      const avgTemperature = numReadings > 0 ? (totalTemp / numReadings).toFixed(1) : \"N/A\";\n      const avgHumidity = numReadings > 0 ? (totalHumidity / numReadings).toFixed(0) : \"N/A\";\n\n      // Update State\n      setData({\n        totalDevices: deviceIds.size,\n        activeSensors: activeSensorIds.size,\n        avgTemperature,\n        avgHumidity,\n        activeAlerts\n      });\n\n      // Display the most recent 5 events\n      setRecentEvents(events.slice(-5).reverse());\n      setLastUpdate(new Date());\n    } catch (error) {\n      console.error(\"Error fetching live data:\", error);\n      // Optional: Show an error notification to the user\n      // setData(prev => ({...prev, avgTemperature: \"ERROR\", avgHumidity: \"ERROR\"}));\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    // Set up interval for continuous real-time monitoring feel (e.g., every 30 seconds)\n    const intervalId = setInterval(fetchData, 30000);\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []); // Empty dependency array ensures it runs only once on mount\n\n  const statCards = [\n  // ... (rest of your statCards array remains the same)\n  {\n    title: \"Total Devices\",\n    value: data.totalDevices,\n    icon: /*#__PURE__*/_jsxDEV(Server, {\n      size: 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this),\n    color: \"blue\"\n  }, {\n    title: \"Active Sensors\",\n    value: data.activeSensors,\n    icon: /*#__PURE__*/_jsxDEV(Activity, {\n      size: 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this),\n    color: \"green\"\n  }, {\n    title: \"Avg. Temp.\",\n    value: data.avgTemperature !== \"N/A\" ? `${data.avgTemperature}°C` : \"N/A\",\n    icon: /*#__PURE__*/_jsxDEV(Thermometer, {\n      size: 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this),\n    color: \"red\"\n  }, {\n    title: \"Avg. Humidity\",\n    value: data.avgHumidity !== \"N/A\" ? `${data.avgHumidity}%` : \"N/A\",\n    icon: /*#__PURE__*/_jsxDEV(Droplets, {\n      size: 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this),\n    color: \"purple\"\n  }, {\n    title: \"Active Alerts\",\n    value: data.activeAlerts,\n    icon: /*#__PURE__*/_jsxDEV(AlertCircle, {\n      size: 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this),\n    color: \"yellow\",\n    isCritical: data.activeAlerts > 0\n  }];\n  const systemStatus = data.activeAlerts === 0 ? \"Nominal\" : \"Alerts Present\";\n  const systemStatusClass = data.activeAlerts === 0 ? \"status-success\" : \"status-warning\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcome-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sensorium Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your centralized hub for real-time sensor monitoring.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `system-status-badge ${systemStatusClass}`,\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"System Status: \", systemStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-update-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        size: 14\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Last Update: \", lastUpdate.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"System Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-grid\",\n      children: statCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `stat-card ${card.color} ${card.isCritical ? 'critical-alert' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `stat-icon`,\n            children: card.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"stat-value\",\n            children: card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-title\",\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-placeholder analytics-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Detailed Analytics & Reporting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use the navigation to access comprehensive historical data, trend charts, and customizable reports.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-chart\",\n          children: \"Chart Area (e.g., Live Temp Trend)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-events-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Sensor Events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-list\",\n          children: [recentEvents.length > 0 ? recentEvents.map(event =>\n          /*#__PURE__*/\n          // Note: Ensure your CSS has styles for status-alert (or status-warning) and status-nominal (or status-success)\n          _jsxDEV(\"div\", {\n            className: `event-item status-${event.status.toLowerCase()}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"event-device\",\n              children: event.device\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"event-type\",\n              children: event.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"event-value\",\n              children: event.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this)]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-events\",\n            children: \"No recent sensor activity reported.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"view-more\",\n            children: \"View full event log \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(WelcomePage, \"XViGk8ppL4YshjeN9LN5qSXW9Qg=\");\n_c = WelcomePage;\nexport default WelcomePage;\nvar _c;\n$RefreshReg$(_c, \"WelcomePage\");","map":{"version":3,"names":["React","useEffect","useState","Thermometer","Droplets","Activity","Server","AlertCircle","Clock","CheckCircle","axios","jsxDEV","_jsxDEV","API_BASE_URL","WelcomePage","_s","data","setData","totalDevices","activeSensors","avgTemperature","avgHumidity","activeAlerts","lastUpdate","setLastUpdate","Date","recentEvents","setRecentEvents","fetchData","sensorsRes","get","allSensors","totalTemp","totalHumidity","deviceIds","Set","activeSensorIds","events","forEach","sensor","deviceId","add","isActive","id","temperature","humidity","isAlert","push","type","device","value","status","numReadings","length","toFixed","size","slice","reverse","error","console","intervalId","setInterval","clearInterval","statCards","title","icon","fileName","_jsxFileName","lineNumber","columnNumber","color","isCritical","systemStatus","systemStatusClass","className","children","toLocaleTimeString","map","card","index","event","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/Welcome/Welcome.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Thermometer, Droplets, Activity, Server, AlertCircle, Clock, CheckCircle } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport \"./Welcome.css\"; // Assuming your styling remains in Welcome.css\r\n\r\nconst API_BASE_URL = \"https://sensorium-api.vercel.app/api\";\r\n\r\nconst WelcomePage = () => {\r\n  const [data, setData] = useState({\r\n    totalDevices: 0,\r\n    activeSensors: 0,\r\n    avgTemperature: null,\r\n    avgHumidity: null,\r\n    activeAlerts: 0,\r\n  });\r\n  const [lastUpdate, setLastUpdate] = useState(new Date());\r\n  const [recentEvents, setRecentEvents] = useState([]); // State for live recent events\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      // 1. Fetch All Sensor Readings\r\n      const sensorsRes = await axios.get(`${API_BASE_URL}/digital-sensors`);\r\n      const allSensors = sensorsRes.data;\r\n\r\n      // 2. Aggregate Data\r\n      let totalTemp = 0;\r\n      let totalHumidity = 0;\r\n      let activeAlerts = 0;\r\n      const deviceIds = new Set();\r\n      const activeSensorIds = new Set();\r\n      const events = [];\r\n\r\n      allSensors.forEach((sensor) => {\r\n        // Collect Device IDs and Active Sensor IDs\r\n        if (sensor.deviceId) deviceIds.add(sensor.deviceId);\r\n        if (sensor.isActive) activeSensorIds.add(sensor.id);\r\n\r\n        // Aggregate Temperature and Humidity\r\n        if (typeof sensor.temperature === 'number') {\r\n          totalTemp += sensor.temperature;\r\n        }\r\n        if (typeof sensor.humidity === 'number') {\r\n          totalHumidity += sensor.humidity;\r\n        }\r\n\r\n        // Check for Alerts (Assuming an 'isAlert' flag or threshold breach)\r\n        // You might need to adjust this logic based on your API's alert structure\r\n        if (sensor.isAlert || sensor.temperature > 30) { \r\n          activeAlerts += 1;\r\n          events.push({\r\n            id: sensor.id,\r\n            type: \"Alert\",\r\n            device: sensor.deviceId || 'N/A',\r\n            value: `Temp: ${sensor.temperature}°C`,\r\n            status: \"Alert\",\r\n          });\r\n        } else {\r\n            // Add nominal events (only show the last few for clarity)\r\n            events.push({\r\n                id: sensor.id,\r\n                type: \"Temperature\",\r\n                device: sensor.deviceId || 'N/A',\r\n                value: `${sensor.temperature}°C`,\r\n                status: \"Nominal\",\r\n            });\r\n        }\r\n      });\r\n\r\n      // Calculate Averages\r\n      const numReadings = allSensors.length;\r\n      const avgTemperature = numReadings > 0 ? (totalTemp / numReadings).toFixed(1) : \"N/A\";\r\n      const avgHumidity = numReadings > 0 ? (totalHumidity / numReadings).toFixed(0) : \"N/A\";\r\n\r\n      // Update State\r\n      setData({\r\n        totalDevices: deviceIds.size,\r\n        activeSensors: activeSensorIds.size,\r\n        avgTemperature,\r\n        avgHumidity,\r\n        activeAlerts,\r\n      });\r\n\r\n      // Display the most recent 5 events\r\n      setRecentEvents(events.slice(-5).reverse()); \r\n      setLastUpdate(new Date());\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching live data:\", error);\r\n      // Optional: Show an error notification to the user\r\n      // setData(prev => ({...prev, avgTemperature: \"ERROR\", avgHumidity: \"ERROR\"}));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // Set up interval for continuous real-time monitoring feel (e.g., every 30 seconds)\r\n    const intervalId = setInterval(fetchData, 30000); \r\n    return () => clearInterval(intervalId); // Cleanup on unmount\r\n  }, []); // Empty dependency array ensures it runs only once on mount\r\n\r\n  const statCards = [\r\n    // ... (rest of your statCards array remains the same)\r\n    {\r\n      title: \"Total Devices\",\r\n      value: data.totalDevices,\r\n      icon: <Server size={32} />,\r\n      color: \"blue\",\r\n    },\r\n    {\r\n      title: \"Active Sensors\",\r\n      value: data.activeSensors,\r\n      icon: <Activity size={32} />,\r\n      color: \"green\",\r\n    },\r\n    {\r\n      title: \"Avg. Temp.\",\r\n      value: data.avgTemperature !== \"N/A\" ? `${data.avgTemperature}°C` : \"N/A\",\r\n      icon: <Thermometer size={32} />,\r\n      color: \"red\",\r\n    },\r\n    {\r\n      title: \"Avg. Humidity\",\r\n      value: data.avgHumidity !== \"N/A\" ? `${data.avgHumidity}%` : \"N/A\",\r\n      icon: <Droplets size={32} />,\r\n      color: \"purple\",\r\n    },\r\n    {\r\n      title: \"Active Alerts\",\r\n      value: data.activeAlerts,\r\n      icon: <AlertCircle size={32} />,\r\n      color: \"yellow\",\r\n      isCritical: data.activeAlerts > 0,\r\n    },\r\n  ];\r\n\r\n  const systemStatus = data.activeAlerts === 0 ? \"Nominal\" : \"Alerts Present\";\r\n  const systemStatusClass = data.activeAlerts === 0 ? \"status-success\" : \"status-warning\";\r\n\r\n  return (\r\n    <div className=\"welcome-container\">\r\n      {/* Header with Time and Status */}\r\n      <div className=\"welcome-header\">\r\n        <div className=\"header-info\">\r\n          <h1>Sensorium Dashboard</h1>\r\n          <p>Your centralized hub for real-time sensor monitoring.</p>\r\n        </div>\r\n        <div className={`system-status-badge ${systemStatusClass}`}>\r\n          <CheckCircle size={16} />\r\n          <span>System Status: {systemStatus}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"last-update-bar\">\r\n        <Clock size={14} />\r\n        <span>Last Update: {lastUpdate.toLocaleTimeString()}</span>\r\n      </div>\r\n\r\n      {/* Overview */}\r\n      <h2 className=\"section-title\">System Overview</h2>\r\n      <div className=\"stat-grid\">\r\n        {statCards.map((card, index) => (\r\n          <div \r\n            key={index} \r\n            className={`stat-card ${card.color} ${card.isCritical ? 'critical-alert' : ''}`}\r\n          >\r\n            <div className=\"card-top\">\r\n              <div className={`stat-icon`}>{card.icon}</div>\r\n              <h3 className=\"stat-value\">{card.value}</h3>\r\n            </div>\r\n            <p className=\"stat-title\">{card.title}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"main-content-layout\">\r\n        {/* Reports Placeholder (Main/Large Section) */}\r\n        <div className=\"reports-placeholder analytics-panel\">\r\n          <h3>Detailed Analytics & Reporting</h3>\r\n          <p>Use the navigation to access comprehensive historical data, trend charts, and customizable reports.</p>\r\n          <div className=\"placeholder-chart\">Chart Area (e.g., Live Temp Trend)</div>\r\n        </div>\r\n        \r\n        {/* Recent Events Panel (Side/Smaller Section) */}\r\n        <div className=\"recent-events-panel\">\r\n          <h3>Recent Sensor Events</h3>\r\n          <div className=\"event-list\">\r\n            {recentEvents.length > 0 ? (\r\n                recentEvents.map((event) => (\r\n                    // Note: Ensure your CSS has styles for status-alert (or status-warning) and status-nominal (or status-success)\r\n                    <div key={event.id} className={`event-item status-${event.status.toLowerCase()}`}>\r\n                        <span className=\"event-device\">{event.device}</span>\r\n                        <span className=\"event-type\">{event.type}</span>\r\n                        <span className=\"event-value\">{event.value}</span>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p className=\"no-events\">No recent sensor activity reported.</p>\r\n            )}\r\n            <p className=\"view-more\">View full event log &rarr;</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}