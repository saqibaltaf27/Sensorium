{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\Reports\\\\ReportsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { Thermometer, Droplets, Activity, Cloud, Calendar, Server, Cpu, Download } from \"lucide-react\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport \"./ReportsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportPage = ({\n  period\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [sensors, setSensors] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\n  const [selectedSensor, setSelectedSensor] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  // Fetch devices\n  useEffect(() => {\n    axios.get(\"https://sensorium-api.vercel.app/api/devices\").then(res => {\n      setDevices(res.data);\n    });\n  }, []);\n\n  // Fetch sensors when device changes\n  useEffect(() => {\n    if (selectedDevice) {\n      axios.get(`https://sensorium-api.vercel.app/api/sensors/${selectedDevice}`).then(res => {\n        setSensors(res.data);\n        setSelectedSensor(\"\"); // Reset sensor selection\n      });\n    } else {\n      setSensors([]);\n      setSelectedSensor(\"\");\n    }\n  }, [selectedDevice]);\n\n  // Map frontend period names to backend period names\n  const periodMap = {\n    \"Daily Report\": \"daily\",\n    \"Weekly Report\": \"weekly\",\n    \"Monthly Report\": \"monthly\",\n    \"Quarterly Report\": \"quarter\",\n    \"6 Months Report\": \"6months\",\n    \"Yearly Report\": \"yearly\"\n  };\n\n  // Fetch aggregated report\n  useEffect(() => {\n    if (selectedDevice && selectedSensor && period) {\n      const backendPeriod = periodMap[period];\n      if (!backendPeriod) {\n        setData([]);\n        return;\n      }\n      axios.get(`https://sensorium-api.vercel.app/api/reports?deviceId=${selectedDevice}&sensorId=${selectedSensor}&period=${backendPeriod}`).then(res => {\n        setData(res.data);\n      }).catch(error => {\n        console.error(\"Error fetching report:\", error);\n        setData([]);\n      });\n    }\n  }, [selectedDevice, selectedSensor, period]);\n\n  // Handle the detailed report download\n  const handleDownloadDetailedReport = async () => {\n    if (!selectedDevice || !selectedSensor) {\n      alert(\"Please select a device and sensor first.\");\n      return;\n    }\n    const supportedPeriods = [\"Daily Report\", \"Weekly Report\", \"Monthly Report\"];\n    if (!supportedPeriods.includes(period)) {\n      alert(\"Detailed report is only available for Daily, Weekly, and Monthly periods.\");\n      return;\n    }\n    try {\n      const backendPeriod = periodMap[period];\n      const res = await axios.get(`https://sensorium-api.vercel.app/api/detailed-reports?deviceId=${selectedDevice}&sensorId=${selectedSensor}&period=${backendPeriod}`);\n      const detailedData = res.data;\n      if (detailedData.length === 0) {\n        alert(\"No detailed data found for this period.\");\n        return;\n      }\n      const worksheet = XLSX.utils.json_to_sheet(detailedData);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Detailed Report\");\n      const excelBuffer = XLSX.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\"\n      });\n      const blob = new Blob([excelBuffer], {\n        type: \"application/octet-stream\"\n      });\n      const fileName = `Detailed_Report_${selectedDevice}_${selectedSensor}_${period}.xlsx`;\n      saveAs(blob, fileName);\n    } catch (error) {\n      console.error(\"Error downloading detailed report:\", error);\n      alert(\"Failed to download detailed report. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"report-title flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        className: \"w-6 h-6 text-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), \"Reports - \", period]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-box\",\n        children: [/*#__PURE__*/_jsxDEV(Server, {\n          className: \"w-5 h-5 text-gray-500 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          value: selectedDevice,\n          onChange: e => setSelectedDevice(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), devices.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.deviceId,\n            children: d.deviceName\n          }, d.deviceId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-box\",\n        children: [/*#__PURE__*/_jsxDEV(Cpu, {\n          className: \"w-5 h-5 text-gray-500 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          value: selectedSensor,\n          onChange: e => setSelectedSensor(e.target.value),\n          disabled: !selectedDevice,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), sensors.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s.sensorId,\n            children: s.label || `Sensor ${s.sensorId}`\n          }, s.sensorId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), selectedDevice && selectedSensor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button flex items-center gap-1\",\n        onClick: handleDownloadDetailedReport,\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          className: \"w-4 h-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), \" Download Detailed Report (Excel)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"report-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), \" Period\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), \" Min Temp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), \" Avg Temp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), \" Max Temp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Droplets, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), \" Avg Humidity\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Activity, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), \" Avg Heat Index\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Cloud, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), \" Avg Dew Point\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: period === \"Daily Report\" ? new Date(row.period).toLocaleTimeString() : new Date(row.period).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.minTemp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgTemp !== null ? row.avgTemp.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.maxTemp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgHumidity !== null ? row.avgHumidity.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgHeatIndex !== null ? row.avgHeatIndex.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgDewPoint !== null ? row.avgDewPoint.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"period\",\n            tickFormatter: date => period === \"Daily Report\" ? new Date(date).toLocaleTimeString(\"en-GB\") : new Date(date).toLocaleDateString(\"en-GB\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: date => period === \"Daily Report\" ? new Date(date).toLocaleTimeString(\"en-GB\") : new Date(date).toLocaleDateString(\"en-GB\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgTemp\",\n            stroke: \"#007bff\",\n            name: \"Avg Temp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgHumidity\",\n            stroke: \"#28a745\",\n            name: \"Avg Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgHeatIndex\",\n            stroke: \"#ff5722\",\n            name: \"Avg Heat Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgDewPoint\",\n            stroke: \"#6f42c1\",\n            name: \"Avg Dew Point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportPage, \"ptAPK4avbEYsB7+4ohEBQ+HSRP0=\");\n_c = ReportPage;\nexport default ReportPage;\nvar _c;\n$RefreshReg$(_c, \"ReportPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Thermometer","Droplets","Activity","Cloud","Calendar","Server","Cpu","Download","XLSX","saveAs","jsxDEV","_jsxDEV","ReportPage","period","_s","devices","setDevices","sensors","setSensors","selectedDevice","setSelectedDevice","selectedSensor","setSelectedSensor","data","setData","get","then","res","periodMap","backendPeriod","catch","error","console","handleDownloadDetailedReport","alert","supportedPeriods","includes","detailedData","length","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","fileName","className","children","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","d","deviceId","deviceName","disabled","s","sensorId","label","onClick","row","idx","Date","toLocaleTimeString","toLocaleDateString","minTemp","avgTemp","toFixed","maxTemp","avgHumidity","avgHeatIndex","avgDewPoint","width","height","strokeDasharray","dataKey","tickFormatter","date","labelFormatter","stroke","name","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/Reports/ReportsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport {\r\n  Thermometer,\r\n  Droplets,\r\n  Activity,\r\n  Cloud,\r\n  Calendar,\r\n  Server,\r\n  Cpu,\r\n  Download,\r\n} from \"lucide-react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./ReportsPage.css\";\r\n\r\nconst ReportPage = ({ period }) => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [sensors, setSensors] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\r\n  const [selectedSensor, setSelectedSensor] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n\r\n  // Fetch devices\r\n  useEffect(() => {\r\n    axios.get(\"https://sensorium-api.vercel.app/api/devices\").then((res) => {\r\n      setDevices(res.data);\r\n    });\r\n  }, []);\r\n\r\n  // Fetch sensors when device changes\r\n  useEffect(() => {\r\n    if (selectedDevice) {\r\n      axios\r\n        .get(`https://sensorium-api.vercel.app/api/sensors/${selectedDevice}`)\r\n        .then((res) => {\r\n          setSensors(res.data);\r\n          setSelectedSensor(\"\"); // Reset sensor selection\r\n        });\r\n    } else {\r\n      setSensors([]);\r\n      setSelectedSensor(\"\");\r\n    }\r\n  }, [selectedDevice]);\r\n\r\n  // Map frontend period names to backend period names\r\n  const periodMap = {\r\n    \"Daily Report\": \"daily\",\r\n    \"Weekly Report\": \"weekly\",\r\n    \"Monthly Report\": \"monthly\",\r\n    \"Quarterly Report\": \"quarter\",\r\n    \"6 Months Report\": \"6months\",\r\n    \"Yearly Report\": \"yearly\",\r\n  };\r\n\r\n  // Fetch aggregated report\r\n  useEffect(() => {\r\n    if (selectedDevice && selectedSensor && period) {\r\n      const backendPeriod = periodMap[period];\r\n      if (!backendPeriod) {\r\n        setData([]);\r\n        return;\r\n      }\r\n      axios\r\n        .get(\r\n          `https://sensorium-api.vercel.app/api/reports?deviceId=${selectedDevice}&sensorId=${selectedSensor}&period=${backendPeriod}`\r\n        )\r\n        .then((res) => {\r\n          setData(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching report:\", error);\r\n          setData([]);\r\n        });\r\n    }\r\n  }, [selectedDevice, selectedSensor, period]);\r\n\r\n  // Handle the detailed report download\r\n  const handleDownloadDetailedReport = async () => {\r\n    if (!selectedDevice || !selectedSensor) {\r\n      alert(\"Please select a device and sensor first.\");\r\n      return;\r\n    }\r\n\r\n    const supportedPeriods = [\"Daily Report\", \"Weekly Report\", \"Monthly Report\"];\r\n    if (!supportedPeriods.includes(period)) {\r\n        alert(\"Detailed report is only available for Daily, Weekly, and Monthly periods.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n      const backendPeriod = periodMap[period];\r\n      const res = await axios.get(\r\n        `https://sensorium-api.vercel.app/api/detailed-reports?deviceId=${selectedDevice}&sensorId=${selectedSensor}&period=${backendPeriod}`\r\n      );\r\n      const detailedData = res.data;\r\n\r\n      if (detailedData.length === 0) {\r\n        alert(\"No detailed data found for this period.\");\r\n        return;\r\n      }\r\n\r\n      const worksheet = XLSX.utils.json_to_sheet(detailedData);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Detailed Report\");\r\n      \r\n      const excelBuffer = XLSX.write(workbook, { bookType: \"xlsx\", type: \"array\" });\r\n      const blob = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n      \r\n      const fileName = `Detailed_Report_${selectedDevice}_${selectedSensor}_${period}.xlsx`;\r\n      saveAs(blob, fileName);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error downloading detailed report:\", error);\r\n      alert(\"Failed to download detailed report. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-container\">\r\n      <h2 className=\"report-title flex items-center gap-2\">\r\n        <Calendar className=\"w-6 h-6 text-blue-600\" />\r\n        Reports - {period}\r\n      </h2>\r\n\r\n      {/* Filters */}\r\n      <div className=\"filters\">\r\n        <div className=\"filter-box\">\r\n          <Server className=\"w-5 h-5 text-gray-500 mr-2\" />\r\n          <select\r\n            className=\"dropdown\"\r\n            value={selectedDevice}\r\n            onChange={(e) => setSelectedDevice(e.target.value)}\r\n          >\r\n            <option value=\"\">Select Device</option>\r\n            {devices.map((d) => (\r\n              <option key={d.deviceId} value={d.deviceId}>\r\n                {d.deviceName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"filter-box\">\r\n          <Cpu className=\"w-5 h-5 text-gray-500 mr-2\" />\r\n          <select\r\n            className=\"dropdown\"\r\n            value={selectedSensor}\r\n            onChange={(e) => setSelectedSensor(e.target.value)}\r\n            disabled={!selectedDevice}\r\n          >\r\n            <option value=\"\">Select Sensor</option>\r\n            {sensors.map((s) => (\r\n              <option key={s.sensorId} value={s.sensorId}>\r\n                {s.label || `Sensor ${s.sensorId}`}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Download Button */}\r\n      {selectedDevice && selectedSensor && (\r\n        <div className=\"download-button-container\">\r\n          <button\r\n            className=\"download-button flex items-center gap-1\"\r\n            onClick={handleDownloadDetailedReport}\r\n          >\r\n            <Download className=\"w-4 h-4\" /> Download Detailed Report (Excel)\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Table */}\r\n      {data.length > 0 && (\r\n        <div className=\"table-wrapper\">\r\n          <table className=\"report-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Calendar className=\"inline w-4 h-4 mr-1\" /> Period\r\n                </th>\r\n                <th>\r\n                  <Thermometer className=\"inline w-4 h-4 mr-1\" /> Min Temp\r\n                </th>\r\n                <th>\r\n                  <Thermometer className=\"inline w-4 h-4 mr-1\" /> Avg Temp\r\n                </th>\r\n                <th>\r\n                  <Thermometer className=\"inline w-4 h-4 mr-1\" /> Max Temp\r\n                </th>\r\n                <th>\r\n                  <Droplets className=\"inline w-4 h-4 mr-1\" /> Avg Humidity\r\n                </th>\r\n                <th>\r\n                  <Activity className=\"inline w-4 h-4 mr-1\" /> Avg Heat Index\r\n                </th>\r\n                <th>\r\n                  <Cloud className=\"inline w-4 h-4 mr-1\" /> Avg Dew Point\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  <td>\r\n                    {period === \"Daily Report\"\r\n                      ? new Date(row.period).toLocaleTimeString()\r\n                      : new Date(row.period).toLocaleDateString()}\r\n                  </td>\r\n                  <td>{row.minTemp}</td>\r\n                  <td>\r\n                    {row.avgTemp !== null ? row.avgTemp.toFixed(2) : \"-\"}\r\n                  </td>\r\n                  <td>{row.maxTemp}</td>\r\n                  <td>\r\n                    {row.avgHumidity !== null\r\n                      ? row.avgHumidity.toFixed(2)\r\n                      : \"-\"}\r\n                  </td>\r\n                  <td>\r\n                    {row.avgHeatIndex !== null\r\n                      ? row.avgHeatIndex.toFixed(2)\r\n                      : \"-\"}\r\n                  </td>\r\n                  <td>\r\n                    {row.avgDewPoint !== null\r\n                      ? row.avgDewPoint.toFixed(2)\r\n                      : \"-\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Graph */}\r\n      {data.length > 0 && (\r\n        <div className=\"chart-wrapper\">\r\n          <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                dataKey=\"period\"\r\n                tickFormatter={(date) =>\r\n                  period === \"Daily Report\"\r\n                    ? new Date(date).toLocaleTimeString(\"en-GB\")\r\n                    : new Date(date).toLocaleDateString(\"en-GB\")\r\n                }\r\n              />\r\n              <YAxis />\r\n              <Tooltip\r\n                labelFormatter={(date) =>\r\n                  period === \"Daily Report\"\r\n                    ? new Date(date).toLocaleTimeString(\"en-GB\")\r\n                    : new Date(date).toLocaleDateString(\"en-GB\")\r\n                }\r\n              />\r\n              <Legend />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgTemp\"\r\n                stroke=\"#007bff\"\r\n                name=\"Avg Temp\"\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgHumidity\"\r\n                stroke=\"#28a745\"\r\n                name=\"Avg Humidity\"\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgHeatIndex\"\r\n                stroke=\"#ff5722\"\r\n                name=\"Avg Heat Index\"\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgDewPoint\"\r\n                stroke=\"#6f42c1\"\r\n                name=\"Avg Dew Point\"\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}