{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sensorTypes = ['Digital Sensors', 'Switch Sensors', 'Internal Relays', 'External Relays', 'Analog Sensors', 'Power Sensors'];\nconst Sidebar = ({\n  deviceInfo,\n  selectedDevice,\n  setSelectedDevice,\n  setSelectedSensor\n}) => {\n  _s();\n  const [openDeviceId, setOpenDeviceId] = useState(selectedDevice);\n  const handleDeviceClick = deviceId => {\n    setOpenDeviceId(openDeviceId === deviceId ? null : deviceId);\n    setSelectedDevice(deviceId);\n    setSelectedSensor(null);\n  };\n  const handleSensorClick = (deviceId, sensorType) => {\n    setSelectedDevice(deviceId);\n    setSelectedSensor(sensorType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navigation\",\n      children: deviceInfo.map(device => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-menu-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `device-header ${openDeviceId === device.deviceId ? 'active' : ''}`,\n          onClick: () => handleDeviceClick(device.deviceId),\n          children: [device.deviceName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow-icon ${openDeviceId === device.deviceId ? 'up' : 'down'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `sub-menu ${openDeviceId === device.deviceId ? 'visible' : ''}`,\n          children: sensorTypes.map(sensorType => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"sub-menu-item\",\n            onClick: () => handleSensorClick(device.deviceId, sensorType),\n            children: sensorType\n          }, sensorType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, device.deviceId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"n/4gxELCzDcEXnQxN1r5C2X0EAc=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","sensorTypes","Sidebar","deviceInfo","selectedDevice","setSelectedDevice","setSelectedSensor","_s","openDeviceId","setOpenDeviceId","handleDeviceClick","deviceId","handleSensorClick","sensorType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","device","onClick","deviceName","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/Sidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst sensorTypes = [\r\n  'Digital Sensors',\r\n  'Switch Sensors',\r\n  'Internal Relays',\r\n  'External Relays',\r\n  'Analog Sensors',\r\n  'Power Sensors',\r\n];\r\n\r\nconst Sidebar = ({ deviceInfo, selectedDevice, setSelectedDevice, setSelectedSensor }) => {\r\n  const [openDeviceId, setOpenDeviceId] = useState(selectedDevice);\r\n\r\n  const handleDeviceClick = (deviceId) => {\r\n    setOpenDeviceId(openDeviceId === deviceId ? null : deviceId);\r\n    setSelectedDevice(deviceId);\r\n    setSelectedSensor(null);\r\n  };\r\n\r\n  const handleSensorClick = (deviceId, sensorType) => {\r\n    setSelectedDevice(deviceId);\r\n    setSelectedSensor(sensorType);\r\n  };\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div className=\"logo-section\">\r\n        <h1 className=\"logo\">Dashboard</h1>\r\n      </div>\r\n      <nav className=\"navigation\">\r\n        {deviceInfo.map(device => (\r\n          <div key={device.deviceId} className=\"device-menu-item\">\r\n            <button\r\n              className={`device-header ${openDeviceId === device.deviceId ? 'active' : ''}`}\r\n              onClick={() => handleDeviceClick(device.deviceId)}\r\n            >\r\n              {device.deviceName}\r\n              <span className={`arrow-icon ${openDeviceId === device.deviceId ? 'up' : 'down'}`}></span>\r\n            </button>\r\n            <ul className={`sub-menu ${openDeviceId === device.deviceId ? 'visible' : ''}`}>\r\n              {sensorTypes.map(sensorType => (\r\n                <li\r\n                  key={sensorType}\r\n                  className=\"sub-menu-item\"\r\n                  onClick={() => handleSensorClick(device.deviceId, sensorType)}\r\n                >\r\n                  {sensorType}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}