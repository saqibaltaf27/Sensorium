{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\SensorDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api'; // Set the base URL here\n\nconst SensorDetails = ({\n  deviceId,\n  sensorType\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchSensorDetails() {\n      setLoading(true);\n      try {\n        const endpoint = sensorType.replace(' ', '-').toLowerCase();\n        const response = await fetch(`${API_BASE_URL}/live/${endpoint}?deviceId=${deviceId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result[0] || {});\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching sensor data:\", error);\n        setLoading(false);\n        setData(null);\n      }\n    }\n    fetchSensorDetails();\n  }, [deviceId, sensorType]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state-card\",\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data || Object.keys(data).length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-state-card\",\n      children: \"No data found for this sensor.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Basic display of live data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-details-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"card-title\",\n      children: [sensorType, \" for \", deviceId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-grid\",\n      children: Object.entries(data).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"data-label\",\n          children: [key, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"data-value\",\n          children: String(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SensorDetails, \"Zn4cs3026OJRBhxLd0Oqj+bUOXY=\");\n_c = SensorDetails;\nexport default SensorDetails;\nvar _c;\n$RefreshReg$(_c, \"SensorDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_BASE_URL","SensorDetails","deviceId","sensorType","_s","data","setData","loading","setLoading","fetchSensorDetails","endpoint","replace","toLowerCase","response","fetch","ok","Error","status","result","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","key","value","String","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/SensorDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api'; // Set the base URL here\r\n\r\nconst SensorDetails = ({ deviceId, sensorType }) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchSensorDetails() {\r\n      setLoading(true);\r\n      try {\r\n        const endpoint = sensorType.replace(' ', '-').toLowerCase();\r\n        const response = await fetch(`${API_BASE_URL}/live/${endpoint}?deviceId=${deviceId}`);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        const result = await response.json();\r\n        setData(result[0] || {});\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching sensor data:\", error);\r\n        setLoading(false);\r\n        setData(null);\r\n      }\r\n    }\r\n    fetchSensorDetails();\r\n  }, [deviceId, sensorType]);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading-state-card\">Loading data...</div>;\r\n  }\r\n\r\n  if (!data || Object.keys(data).length === 0) {\r\n    return <div className=\"error-state-card\">No data found for this sensor.</div>;\r\n  }\r\n  \r\n  // Basic display of live data\r\n  return (\r\n    <div className=\"sensor-details-card\">\r\n      <h3 className=\"card-title\">{sensorType} for {deviceId}</h3>\r\n      <div className=\"data-grid\">\r\n        {Object.entries(data).map(([key, value]) => (\r\n          <div key={key} className=\"data-item\">\r\n            <span className=\"data-label\">{key}:</span>\r\n            <span className=\"data-value\">{String(value)}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}