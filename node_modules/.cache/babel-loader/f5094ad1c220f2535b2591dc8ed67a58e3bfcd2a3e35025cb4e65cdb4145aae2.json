{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\Welcome\\\\Welcome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DashboardHeader } from \"@/components/DashboardHeader\";\nimport { TemperatureSensor } from \"@/components/TemperatureSensor\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { ArrowRight, Zap, Thermometer, Droplets, Activity, Cloud, Server, AlertCircle } from \"lucide-react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Welcome = () => {\n  _s();\n  const [data, setData] = useState({\n    totalDevices: 0,\n    activeSensors: 0,\n    avgTemperature: null,\n    avgHumidity: null,\n    activeAlerts: 0\n  });\n  const [sensorData, setSensorData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch devices\n        const devicesRes = await axios.get(\"https://sensorium-api.vercel.app/api/devices\");\n        const devices = devicesRes.data;\n        const totalDevices = devices.length;\n        let activeSensors = 0;\n        let allSensorsData = [];\n        let totalTemp = 0;\n        let totalHumidity = 0;\n        let tempCount = 0;\n        let humidityCount = 0;\n\n        // Fetch sensors for each device\n        const sensorPromises = devices.map(device => axios.get(`https://sensorium-api.vercel.app/api/sensors/${device.deviceId}`).then(res => ({\n          deviceId: device.deviceId,\n          deviceName: device.deviceName,\n          sensors: res.data\n        })));\n        const sensorResponses = await Promise.all(sensorPromises);\n\n        // Process sensor data\n        sensorResponses.forEach(deviceData => {\n          deviceData.sensors.forEach((sensor, index) => {\n            activeSensors++;\n\n            // Transform sensor data to match our component format\n            const sensorInfo = {\n              id: sensor.sensorId || `${deviceData.deviceId}_${index}`,\n              name: sensor.label || `${deviceData.deviceName} Sensor ${index + 1}`,\n              location: deviceData.deviceName,\n              initialTemp: 20 + Math.random() * 15,\n              // Random temp for demo\n              isOnline: true,\n              deviceId: deviceData.deviceId\n            };\n            allSensorsData.push(sensorInfo);\n\n            // Calculate averages (using random values for demo since API might not have live readings)\n            totalTemp += sensorInfo.initialTemp;\n            totalHumidity += 50 + Math.random() * 30; // Random humidity\n            tempCount++;\n            humidityCount++;\n          });\n        });\n        const avgTemperature = tempCount > 0 ? (totalTemp / tempCount).toFixed(1) : null;\n        const avgHumidity = humidityCount > 0 ? (totalHumidity / humidityCount).toFixed(1) : null;\n        const activeAlerts = Math.floor(Math.random() * 5); // Mock alerts\n\n        setData({\n          totalDevices,\n          activeSensors,\n          avgTemperature: parseFloat(avgTemperature),\n          avgHumidity: parseFloat(avgHumidity),\n          activeAlerts\n        });\n        setSensorData(allSensorsData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        // Fallback to empty data on error\n        setData({\n          totalDevices: 0,\n          activeSensors: 0,\n          avgTemperature: null,\n          avgHumidity: null,\n          activeAlerts: 0\n        });\n        setSensorData([]);\n      }\n    };\n    fetchData();\n  }, []);\n  const statCards = [{\n    title: 'Total Devices',\n    value: data.totalDevices,\n    icon: Server,\n    color: 'text-primary',\n    bgColor: 'bg-primary/10'\n  }, {\n    title: 'Active Sensors',\n    value: data.activeSensors,\n    icon: Activity,\n    color: 'text-green-500',\n    bgColor: 'bg-green-500/10'\n  }, {\n    title: 'Avg. Temperature',\n    value: data.avgTemperature !== null ? `${data.avgTemperature}Â°C` : 'N/A',\n    icon: Thermometer,\n    color: 'text-red-500',\n    bgColor: 'bg-red-500/10'\n  }, {\n    title: 'Avg. Humidity',\n    value: data.avgHumidity !== null ? `${data.avgHumidity}%` : 'N/A',\n    icon: Droplets,\n    color: 'text-blue-500',\n    bgColor: 'bg-blue-500/10'\n  }, {\n    title: 'Active Alerts',\n    value: data.activeAlerts,\n    icon: AlertCircle,\n    color: 'text-yellow-500',\n    bgColor: 'bg-yellow-500/10'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-background\",\n    children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"hero-gradient px-6 py-16\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-6xl mx-auto text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-flex items-center gap-2 bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), \"Real-time IoT Monitoring\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl md:text-6xl font-bold mb-6\",\n          children: [\"Welcome to\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent\",\n            children: \"Sensorium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-muted-foreground mb-8 max-w-3xl mx-auto\",\n          children: \"Your centralized hub for real-time sensor monitoring. Get instant alerts, track trends, and maintain optimal conditions across all your facilities.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-4 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"lg\",\n            className: \"primary-gradient text-primary-foreground\",\n            children: [\"View Live Dashboard\", /*#__PURE__*/_jsxDEV(ArrowRight, {\n              className: \"ml-2 h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            size: \"lg\",\n            children: \"System Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-6 py-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-6\",\n          children: \"System Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6 mb-12\",\n          children: statCards.map((card, index) => {\n            const IconComponent = card.icon;\n            return /*#__PURE__*/_jsxDEV(Card, {\n              className: \"sensor-card p-6 hover:scale-105 transition-transform duration-300\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col items-start\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-14 h-14 rounded-full flex items-center justify-center ${card.bgColor} mb-4`,\n                  children: /*#__PURE__*/_jsxDEV(IconComponent, {\n                    className: `h-8 w-8 ${card.color}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-muted-foreground font-medium\",\n                  children: card.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-3xl font-bold text-card-foreground mt-1\",\n                  children: card.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-2\",\n          children: \"Temperature Sensors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted-foreground\",\n          children: \"Live monitoring of all temperature sensors across your facilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\",\n        children: sensorData.length > 0 ? sensorData.map(sensor => /*#__PURE__*/_jsxDEV(TemperatureSensor, {\n          id: sensor.id,\n          name: sensor.name,\n          location: sensor.location,\n          initialTemp: sensor.initialTemp,\n          isOnline: sensor.isOnline\n        }, sensor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-full text-center py-8\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted-foreground\",\n            children: \"Loading sensors...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"sensor-card p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-4\",\n            children: \"Quick Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-4 justify-center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              children: \"Add New Sensor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              children: \"Configure Alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              children: \"Export Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              children: \"System Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Welcome, \"q2fOfGyZjkDCeCewd/ZMK1jzy5c=\");\n_c = Welcome;\nexport default Welcome;\nvar _c;\n$RefreshReg$(_c, \"Welcome\");","map":{"version":3,"names":["React","useEffect","useState","DashboardHeader","TemperatureSensor","Button","Card","ArrowRight","Zap","Thermometer","Droplets","Activity","Cloud","Server","AlertCircle","axios","jsxDEV","_jsxDEV","Welcome","_s","data","setData","totalDevices","activeSensors","avgTemperature","avgHumidity","activeAlerts","sensorData","setSensorData","fetchData","devicesRes","get","devices","length","allSensorsData","totalTemp","totalHumidity","tempCount","humidityCount","sensorPromises","map","device","deviceId","then","res","deviceName","sensors","sensorResponses","Promise","all","forEach","deviceData","sensor","index","sensorInfo","id","sensorId","name","label","location","initialTemp","Math","random","isOnline","push","toFixed","floor","parseFloat","error","console","statCards","title","value","icon","color","bgColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","variant","card","IconComponent","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/Welcome/Welcome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DashboardHeader } from \"@/components/DashboardHeader\";\r\nimport { TemperatureSensor } from \"@/components/TemperatureSensor\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { ArrowRight, Zap, Thermometer, Droplets, Activity, Cloud, Server, AlertCircle } from \"lucide-react\";\r\nimport axios from 'axios';\r\n\r\nconst Welcome = () => {\r\n  const [data, setData] = useState({\r\n    totalDevices: 0,\r\n    activeSensors: 0,\r\n    avgTemperature: null,\r\n    avgHumidity: null,\r\n    activeAlerts: 0,\r\n  });\r\n\r\n  const [sensorData, setSensorData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch devices\r\n        const devicesRes = await axios.get(\"https://sensorium-api.vercel.app/api/devices\");\r\n        const devices = devicesRes.data;\r\n        const totalDevices = devices.length;\r\n\r\n        let activeSensors = 0;\r\n        let allSensorsData = [];\r\n        let totalTemp = 0;\r\n        let totalHumidity = 0;\r\n        let tempCount = 0;\r\n        let humidityCount = 0;\r\n        \r\n        // Fetch sensors for each device\r\n        const sensorPromises = devices.map(device =>\r\n          axios.get(`https://sensorium-api.vercel.app/api/sensors/${device.deviceId}`)\r\n            .then(res => ({ deviceId: device.deviceId, deviceName: device.deviceName, sensors: res.data }))\r\n        );\r\n        \r\n        const sensorResponses = await Promise.all(sensorPromises);\r\n        \r\n        // Process sensor data\r\n        sensorResponses.forEach(deviceData => {\r\n          deviceData.sensors.forEach((sensor, index) => {\r\n            activeSensors++;\r\n            \r\n            // Transform sensor data to match our component format\r\n            const sensorInfo = {\r\n              id: sensor.sensorId || `${deviceData.deviceId}_${index}`,\r\n              name: sensor.label || `${deviceData.deviceName} Sensor ${index + 1}`,\r\n              location: deviceData.deviceName,\r\n              initialTemp: 20 + Math.random() * 15, // Random temp for demo\r\n              isOnline: true,\r\n              deviceId: deviceData.deviceId\r\n            };\r\n            \r\n            allSensorsData.push(sensorInfo);\r\n            \r\n            // Calculate averages (using random values for demo since API might not have live readings)\r\n            totalTemp += sensorInfo.initialTemp;\r\n            totalHumidity += 50 + Math.random() * 30; // Random humidity\r\n            tempCount++;\r\n            humidityCount++;\r\n          });\r\n        });\r\n\r\n        const avgTemperature = tempCount > 0 ? (totalTemp / tempCount).toFixed(1) : null;\r\n        const avgHumidity = humidityCount > 0 ? (totalHumidity / humidityCount).toFixed(1) : null;\r\n        const activeAlerts = Math.floor(Math.random() * 5); // Mock alerts\r\n\r\n        setData({\r\n          totalDevices,\r\n          activeSensors,\r\n          avgTemperature: parseFloat(avgTemperature),\r\n          avgHumidity: parseFloat(avgHumidity),\r\n          activeAlerts,\r\n        });\r\n\r\n        setSensorData(allSensorsData);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        // Fallback to empty data on error\r\n        setData({\r\n          totalDevices: 0,\r\n          activeSensors: 0,\r\n          avgTemperature: null,\r\n          avgHumidity: null,\r\n          activeAlerts: 0,\r\n        });\r\n        setSensorData([]);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const statCards = [\r\n    {\r\n      title: 'Total Devices',\r\n      value: data.totalDevices,\r\n      icon: Server,\r\n      color: 'text-primary',\r\n      bgColor: 'bg-primary/10',\r\n    },\r\n    {\r\n      title: 'Active Sensors',\r\n      value: data.activeSensors,\r\n      icon: Activity,\r\n      color: 'text-green-500',\r\n      bgColor: 'bg-green-500/10',\r\n    },\r\n    {\r\n      title: 'Avg. Temperature',\r\n      value: data.avgTemperature !== null ? `${data.avgTemperature}Â°C` : 'N/A',\r\n      icon: Thermometer,\r\n      color: 'text-red-500',\r\n      bgColor: 'bg-red-500/10',\r\n    },\r\n    {\r\n      title: 'Avg. Humidity',\r\n      value: data.avgHumidity !== null ? `${data.avgHumidity}%` : 'N/A',\r\n      icon: Droplets,\r\n      color: 'text-blue-500',\r\n      bgColor: 'bg-blue-500/10',\r\n    },\r\n    {\r\n      title: 'Active Alerts',\r\n      value: data.activeAlerts,\r\n      icon: AlertCircle,\r\n      color: 'text-yellow-500',\r\n      bgColor: 'bg-yellow-500/10',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-background\">\r\n      <DashboardHeader />\r\n      \r\n      {/* Hero Section */}\r\n      <section className=\"hero-gradient px-6 py-16\">\r\n        <div className=\"max-w-6xl mx-auto text-center\">\r\n          <div className=\"inline-flex items-center gap-2 bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-6\">\r\n            <Zap className=\"h-4 w-4\" />\r\n            Real-time IoT Monitoring\r\n          </div>\r\n          \r\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">\r\n            Welcome to{\" \"}\r\n            <span className=\"bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent\">\r\n              Sensorium\r\n            </span>\r\n          </h1>\r\n          \r\n          <p className=\"text-xl text-muted-foreground mb-8 max-w-3xl mx-auto\">\r\n            Your centralized hub for real-time sensor monitoring. \r\n            Get instant alerts, track trends, and maintain optimal conditions across all your facilities.\r\n          </p>\r\n          \r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <Button size=\"lg\" className=\"primary-gradient text-primary-foreground\">\r\n              View Live Dashboard\r\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"lg\">\r\n              System Overview\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Main Dashboard Content */}\r\n      <main className=\"max-w-7xl mx-auto px-6 py-12\">\r\n        {/* System Overview Stats */}\r\n        <div className=\"mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-6\">System Overview</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6 mb-12\">\r\n            {statCards.map((card, index) => {\r\n              const IconComponent = card.icon;\r\n              return (\r\n                <Card key={index} className=\"sensor-card p-6 hover:scale-105 transition-transform duration-300\">\r\n                  <div className=\"flex flex-col items-start\">\r\n                    <div className={`w-14 h-14 rounded-full flex items-center justify-center ${card.bgColor} mb-4`}>\r\n                      <IconComponent className={`h-8 w-8 ${card.color}`} />\r\n                    </div>\r\n                    <p className=\"text-sm text-muted-foreground font-medium\">\r\n                      {card.title}\r\n                    </p>\r\n                    <h3 className=\"text-3xl font-bold text-card-foreground mt-1\">\r\n                      {card.value}\r\n                    </h3>\r\n                  </div>\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-2\">Temperature Sensors</h2>\r\n          <p className=\"text-muted-foreground\">Live monitoring of all temperature sensors across your facilities</p>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\">\r\n          {sensorData.length > 0 ? (\r\n            sensorData.map((sensor) => (\r\n              <TemperatureSensor\r\n                key={sensor.id}\r\n                id={sensor.id}\r\n                name={sensor.name}\r\n                location={sensor.location}\r\n                initialTemp={sensor.initialTemp}\r\n                isOnline={sensor.isOnline}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"col-span-full text-center py-8\">\r\n              <p className=\"text-muted-foreground\">Loading sensors...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        <Card className=\"sensor-card p-8\">\r\n          <div className=\"text-center\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">Quick Actions</h3>\r\n            <div className=\"flex flex-wrap gap-4 justify-center\">\r\n              <Button variant=\"outline\">Add New Sensor</Button>\r\n              <Button variant=\"outline\">Configure Alerts</Button>\r\n              <Button variant=\"outline\">Export Data</Button>\r\n              <Button variant=\"outline\">System Settings</Button>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}