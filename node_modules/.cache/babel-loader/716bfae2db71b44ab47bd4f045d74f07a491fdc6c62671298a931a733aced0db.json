{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\MainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AllSensorsDisplay from './AllSensorsDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst MainContent = ({\n  selectedDevice,\n  selectedSensor\n}) => {\n  _s();\n  const [sensorData, setSensorData] = useState([]);\n  const [deviceInfo, setDeviceInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      if (!selectedDevice || !selectedSensor) return;\n      setLoading(true);\n      try {\n        const sensorEndpoint = selectedSensor.replace(' ', '-').toLowerCase();\n        const response = await fetch(`${API_BASE_URL}/live/${sensorEndpoint}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch sensor data');\n        }\n        const data = await response.json();\n\n        // Filter data for the selected device only\n        const filteredData = data.filter(s => s.deviceId === selectedDevice);\n        setSensorData(filteredData);\n\n        // Fetch device info\n        const deviceRes = await fetch(`${API_BASE_URL}/live/devices`);\n        if (!deviceRes.ok) throw new Error('Failed to fetch device info');\n        const deviceData = await deviceRes.json();\n        const currentDeviceInfo = deviceData.find(d => d.deviceId === selectedDevice);\n        setDeviceInfo(currentDeviceInfo);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [selectedDevice, selectedSensor]);\n  if (!selectedSensor) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-sensor-selected-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-placeholder\",\n            children: \"((\\u2022))\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"no-sensor-text\",\n            children: \"No Sensor Selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-sensor-subtext\",\n            children: \"Please select a sensor from the sidebar to view its details.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-state-card\",\n          children: [\"Loading \", selectedSensor, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"main-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header-title\",\n        children: [\"Live \", selectedSensor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"last-updated\",\n        children: [\"Last updated: \", new Date().toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: /*#__PURE__*/_jsxDEV(AllSensorsDisplay, {\n        sensorData: sensorData,\n        deviceInfo: deviceInfo,\n        selectedSensor: selectedSensor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MainContent, \"ztm0Vbws2dfetaF0DeqIY1d5h9I=\");\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useState","useEffect","AllSensorsDisplay","jsxDEV","_jsxDEV","API_BASE_URL","MainContent","selectedDevice","selectedSensor","_s","sensorData","setSensorData","deviceInfo","setDeviceInfo","loading","setLoading","fetchData","sensorEndpoint","replace","toLowerCase","response","fetch","ok","Error","data","json","filteredData","filter","s","deviceId","deviceRes","deviceData","currentDeviceInfo","find","d","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/MainContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AllSensorsDisplay from './AllSensorsDisplay';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst MainContent = ({ selectedDevice, selectedSensor }) => {\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [deviceInfo, setDeviceInfo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!selectedDevice || !selectedSensor) return;\r\n\r\n      setLoading(true);\r\n      try {\r\n        const sensorEndpoint = selectedSensor.replace(' ', '-').toLowerCase();\r\n        const response = await fetch(`${API_BASE_URL}/live/${sensorEndpoint}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch sensor data');\r\n        }\r\n        const data = await response.json();\r\n        \r\n        // Filter data for the selected device only\r\n        const filteredData = data.filter(s => s.deviceId === selectedDevice);\r\n        setSensorData(filteredData);\r\n\r\n        // Fetch device info\r\n        const deviceRes = await fetch(`${API_BASE_URL}/live/devices`);\r\n        if (!deviceRes.ok) throw new Error('Failed to fetch device info');\r\n        const deviceData = await deviceRes.json();\r\n        const currentDeviceInfo = deviceData.find(d => d.deviceId === selectedDevice);\r\n        setDeviceInfo(currentDeviceInfo);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [selectedDevice, selectedSensor]);\r\n\r\n  if (!selectedSensor) {\r\n    return (\r\n      <main className=\"main-content\">\r\n        <div className=\"content-area\">\r\n          <div className=\"no-sensor-selected-card\">\r\n            <span className=\"icon-placeholder\">((â€¢))</span>\r\n            <h3 className=\"no-sensor-text\">No Sensor Selected</h3>\r\n            <p className=\"no-sensor-subtext\">Please select a sensor from the sidebar to view its details.</p>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <main className=\"main-content\">\r\n        <div className=\"content-area\">\r\n          <div className=\"loading-state-card\">Loading {selectedSensor}...</div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"main-content\">\r\n      <header className=\"main-header\">\r\n        <h2 className=\"header-title\">Live {selectedSensor}</h2>\r\n        <span className=\"last-updated\">Last updated: {new Date().toLocaleTimeString()}</span>\r\n      </header>\r\n      <div className=\"content-area\">\r\n        <AllSensorsDisplay\r\n          sensorData={sensorData}\r\n          deviceInfo={deviceInfo}\r\n          selectedSensor={selectedSensor}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}