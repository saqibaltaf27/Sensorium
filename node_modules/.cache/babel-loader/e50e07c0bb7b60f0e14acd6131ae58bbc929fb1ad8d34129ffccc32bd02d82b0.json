{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuItems = ['Digital Sensors', 'Analog Sensors', 'Switch Sensors', 'Internal Relays', 'External Relays', 'Power Sensors'];\nconst Sidebar = ({\n  onSensorSelect\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [activeDevice, setActiveDevice] = useState(null);\n\n  // This function is no longer needed as we are fetching all sensor data on the MainContent component.\n  // We'll keep a simplified version for navigation.\n  const handleItemClick = item => {\n    onSensorSelect(item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navigation\",\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-item\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-item-button\",\n          onClick: () => handleItemClick(item),\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"jpsP7hvb/LcjcD+6wFiZFObEB3k=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","menuItems","Sidebar","onSensorSelect","_s","devices","setDevices","activeDevice","setActiveDevice","handleItemClick","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/Sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst menuItems = [\r\n  'Digital Sensors',\r\n  'Analog Sensors',\r\n  'Switch Sensors',\r\n  'Internal Relays',\r\n  'External Relays',\r\n  'Power Sensors'\r\n];\r\n\r\nconst Sidebar = ({ onSensorSelect }) => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [activeDevice, setActiveDevice] = useState(null);\r\n\r\n  // This function is no longer needed as we are fetching all sensor data on the MainContent component.\r\n  // We'll keep a simplified version for navigation.\r\n  const handleItemClick = (item) => {\r\n    onSensorSelect(item);\r\n  };\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <div className=\"logo-section\">\r\n        <h1 className=\"logo\">Dashboard</h1>\r\n      </div>\r\n      <nav className=\"navigation\">\r\n        {menuItems.map(item => (\r\n          <div key={item} className=\"menu-item\">\r\n            <button \r\n              className=\"menu-item-button\"\r\n              onClick={() => handleItemClick(item)}\r\n            >\r\n              {item}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAG,CAChB,iBAAiB,EACjB,gBAAgB,EAChB,gBAAgB,EAChB,iBAAiB,EACjB,iBAAiB,EACjB,eAAe,CAChB;AAED,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA;EACA,MAAMY,eAAe,GAAIC,IAAI,IAAK;IAChCP,cAAc,CAACO,IAAI,CAAC;EACtB,CAAC;EAED,oBACEV,OAAA;IAAOW,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACxBZ,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BZ,OAAA;QAAIW,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNhB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBX,SAAS,CAACgB,GAAG,CAACP,IAAI,iBACjBV,OAAA;QAAgBW,SAAS,EAAC,WAAW;QAAAC,QAAA,eACnCZ,OAAA;UACEW,SAAS,EAAC,kBAAkB;UAC5BO,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAACC,IAAI,CAAE;UAAAE,QAAA,EAEpCF;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,GANDN,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACZ,EAAA,CA7BIF,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}