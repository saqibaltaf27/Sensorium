{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport SensorLoadingScreen from \"./components/Loading/SensorLoadingScreen\";\nimport ReportsPage from \"./components/Reports/ReportsPage\";\nimport WelcomePage from \"./components/Welcome/Welcome\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(\"welcome\");\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, []);\n  const handlePageSelect = pageType => {\n    setCurrentPage(pageType);\n    setSelectedReport(null); // Reset report view when switching pages\n  };\n  const handleReportSelect = reportType => {\n    setCurrentPage(\"reports\");\n    setSelectedReport(reportType);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(SensorLoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  const renderContent = () => {\n    switch (currentPage) {\n      case \"welcome\":\n        return /*#__PURE__*/_jsxDEV(WelcomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, this);\n      case \"digital-sensors\":\n        return /*#__PURE__*/_jsxDEV(MainContent, {\n          sensorType: \"Digital Sensors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      case \"reports\":\n        return /*#__PURE__*/_jsxDEV(ReportsPage, {\n          period: selectedReport\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(WelcomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onPageSelect: handlePageSelect,\n      onReportSelect: handleReportSelect,\n      currentPage: currentPage,\n      selectedReport: selectedReport\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oWwrtPFkFOjA5dOrarSA+sDlUH4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","MainContent","SensorLoadingScreen","ReportsPage","WelcomePage","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","selectedReport","setSelectedReport","loading","setLoading","timer","setTimeout","clearTimeout","handlePageSelect","pageType","handleReportSelect","reportType","fileName","_jsxFileName","lineNumber","columnNumber","renderContent","sensorType","period","className","children","onPageSelect","onReportSelect","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport SensorLoadingScreen from \"./components/Loading/SensorLoadingScreen\";\nimport ReportsPage from \"./components/Reports/ReportsPage\";\nimport WelcomePage from \"./components/Welcome/Welcome\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState(\"welcome\");\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handlePageSelect = (pageType) => {\n    setCurrentPage(pageType);\n    setSelectedReport(null); // Reset report view when switching pages\n  };\n\n  const handleReportSelect = (reportType) => {\n    setCurrentPage(\"reports\");\n    setSelectedReport(reportType);\n  };\n\n  if (loading) {\n    return <SensorLoadingScreen />;\n  }\n\n  const renderContent = () => {\n    switch (currentPage) {\n      case \"welcome\":\n        return <WelcomePage />;\n      case \"digital-sensors\":\n        return <MainContent sensorType=\"Digital Sensors\" />;\n      case \"reports\":\n        return <ReportsPage period={selectedReport} />;\n      default:\n        return <WelcomePage />;\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Sidebar\n        onPageSelect={handlePageSelect}\n        onReportSelect={handleReportSelect}\n        currentPage={currentPage}\n        selectedReport={selectedReport}\n      />\n      <main className=\"main-content\">{renderContent()}</main>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}