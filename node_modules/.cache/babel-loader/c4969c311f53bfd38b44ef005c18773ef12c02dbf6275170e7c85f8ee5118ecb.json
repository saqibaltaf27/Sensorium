{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\AllSensorsDisplay.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllSensorsDisplay = ({\n  allSensorsData\n}) => {\n  if (!allSensorsData || allSensorsData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state-card\",\n      children: \"No data found for any digital sensors.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n  const sensorsByDevice = allSensorsData.reduce((acc, sensor) => {\n    const {\n      deviceId\n    } = sensor;\n    if (!acc[deviceId]) {\n      acc[deviceId] = [];\n    }\n    acc[deviceId].push(sensor);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(sensorsByDevice).map(([deviceId, sensors]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Device: \", deviceId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-details-container\",\n        children: sensors.map((sensor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-details-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: sensor.label || `Sensor ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-grid\",\n            children: Object.entries(sensor).map(([key, value]) => {\n              if (['deviceId', 'lastUpdated', 'id', 'label'].includes(key)) {\n                return null;\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: [key, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: String(value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 25\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, deviceId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = AllSensorsDisplay;\nexport default AllSensorsDisplay;\nvar _c;\n$RefreshReg$(_c, \"AllSensorsDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AllSensorsDisplay","allSensorsData","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sensorsByDevice","reduce","acc","sensor","deviceId","push","Object","entries","map","sensors","index","label","key","value","includes","String","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/AllSensorsDisplay.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst AllSensorsDisplay = ({ allSensorsData }) => {\r\n  if (!allSensorsData || allSensorsData.length === 0) {\r\n    return <div className=\"loading-state-card\">No data found for any digital sensors.</div>;\r\n  }\r\n  \r\n  const sensorsByDevice = allSensorsData.reduce((acc, sensor) => {\r\n    const { deviceId } = sensor;\r\n    if (!acc[deviceId]) {\r\n      acc[deviceId] = [];\r\n    }\r\n    acc[deviceId].push(sensor);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div>\r\n      {Object.entries(sensorsByDevice).map(([deviceId, sensors]) => (\r\n        <div key={deviceId}>\r\n          <h2>Device: {deviceId}</h2>\r\n          <div className=\"sensor-details-container\">\r\n            {sensors.map((sensor, index) => (\r\n              <div key={index} className=\"sensor-details-card\">\r\n                <h3 className=\"card-title\">{sensor.label || `Sensor ${index + 1}`}</h3>\r\n                <div className=\"data-grid\">\r\n                  {Object.entries(sensor).map(([key, value]) => {\r\n                    if (['deviceId', 'lastUpdated', 'id', 'label'].includes(key)) {\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <div key={key} className=\"data-item\">\r\n                        <span className=\"data-label\">{key}:</span>\r\n                        <span className=\"data-value\">{String(value)}</span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSensorsDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}