{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\Welcome\\\\Welcome.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Thermometer, Droplets, Activity, Server, AlertCircle } from \"lucide-react\";\n\n// Base URL for the API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'https://sensorium-api.vercel.app/api';\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [overviewData, setOverviewData] = useState({\n    totalDevices: 0,\n    activeSensors: 0,\n    avgTemperature: null,\n    avgHumidity: null,\n    activeAlerts: 0\n  });\n  const [sensorData, setSensorData] = useState([]);\n\n  // Function to fetch all data from the APIs\n  const fetchAllData = async () => {\n    setLoading(true);\n    try {\n      // Fetch overview data (devices)\n      const devicesResponse = await fetch(`${API_BASE_URL}/live/devices`);\n      if (!devicesResponse.ok) {\n        throw new Error(`Failed to fetch devices: ${devicesResponse.statusText}`);\n      }\n      const devices = await devicesResponse.json();\n\n      // Fetch only digital sensor data as requested\n      const digitalSensorsResponse = await fetch(`${API_BASE_URL}/live/digital-sensors`);\n      if (!digitalSensorsResponse.ok) {\n        throw new Error(`Failed to fetch digital sensors: ${digitalSensorsResponse.statusText}`);\n      }\n      const digitalSensors = await digitalSensorsResponse.json();\n\n      // Set sensor data to only digital sensors\n      setSensorData(digitalSensors);\n\n      // Calculate aggregated values based on digital sensors only\n      const totalDevices = devices.length;\n      const activeSensors = digitalSensors.length;\n\n      // Update the state with fetched data\n      setOverviewData({\n        totalDevices,\n        activeSensors,\n        avgTemperature: null,\n        // No temperature data from digital sensors\n        avgHumidity: null,\n        // No humidity data from digital sensors\n        activeAlerts: 2 // Placeholder as there's no clear API endpoint for alerts\n      });\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Initial data fetch\n    fetchAllData();\n\n    // Set up auto-refresh every 5 seconds\n    const intervalId = setInterval(() => {\n      fetchAllData();\n    }, 5000);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  const statCards = [{\n    title: \"Total Devices\",\n    value: overviewData.totalDevices,\n    icon: /*#__PURE__*/_jsxDEV(Server, {\n      size: 32,\n      className: \"text-blue-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this),\n    color: \"blue\"\n  }, {\n    title: \"Active Sensors\",\n    value: overviewData.activeSensors,\n    icon: /*#__PURE__*/_jsxDEV(Activity, {\n      size: 32,\n      className: \"text-green-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this),\n    color: \"green\"\n  }, {\n    title: \"Avg. Temperature\",\n    value: overviewData.avgTemperature !== null ? `${overviewData.avgTemperature}Â°C` : \"N/A\",\n    icon: /*#__PURE__*/_jsxDEV(Thermometer, {\n      size: 32,\n      className: \"text-red-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this),\n    color: \"red\"\n  }, {\n    title: \"Avg. Humidity\",\n    value: overviewData.avgHumidity !== null ? `${overviewData.avgHumidity}%` : \"N/A\",\n    icon: /*#__PURE__*/_jsxDEV(Droplets, {\n      size: 32,\n      className: \"text-purple-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this),\n    color: \"purple\"\n  }, {\n    title: \"Active Alerts\",\n    value: overviewData.activeAlerts,\n    icon: /*#__PURE__*/_jsxDEV(AlertCircle, {\n      size: 32,\n      className: \"text-yellow-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this),\n    color: \"yellow\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen p-8 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      src: \"https://cdn.tailwindcss.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"bg-white rounded-xl shadow-sm p-6 sm:p-8 flex flex-col sm:flex-row items-center justify-between\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-gray-800\",\n            children: \"Welcome to Sensorium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 mt-1\",\n            children: \"Your centralized hub for real-time sensor monitoring.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-gray-700\",\n          children: \"Loading live data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mt-2\",\n          children: \"This may take a moment.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-700 mb-4\",\n            children: \"System Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6\",\n            children: statCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-xl shadow-sm p-6 flex flex-col items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-3 rounded-full bg-${card.color}-100`,\n                children: card.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 mt-4 text-sm font-medium\",\n                children: card.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-2xl font-bold text-gray-900 mt-1\",\n                children: card.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-700 mb-4\",\n            children: \"Live Digital Sensor Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n            children: sensorData.map((sensor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-xl shadow-sm p-6 border-l-4 border-green-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"20\",\n                    height: \"20\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"#10B981\",\n                    strokeWidth: \"2\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    className: \"lucide lucide-check-circle\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M22 11.08V12a10 10 0 1 1-5.93-9.14\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"22 4 12 14.01 9 11.01\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-lg font-semibold text-gray-800\",\n                    children: sensor.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-4\",\n                children: Object.keys(sensor).filter(key => key !== 'label' && key !== 'deviceId' && key !== 'id' && key !== 'lastUpdated' && key !== 'type').map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500\",\n                    children: key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold text-gray-900\",\n                    children: typeof sensor[key] === 'object' && sensor[key] !== null ? `${sensor[key].value}` : sensor[key]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 27\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-sm p-6 sm:p-8 text-center mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800\",\n          children: \"Detailed Reports and Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mt-2\",\n          children: \"Navigate to the reports section to view historical data and detailed graphs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mFqAxVWDfPDRLykms2pFPPsJ7a4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Thermometer","Droplets","Activity","Server","AlertCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","App","_s","loading","setLoading","overviewData","setOverviewData","totalDevices","activeSensors","avgTemperature","avgHumidity","activeAlerts","sensorData","setSensorData","fetchAllData","devicesResponse","fetch","ok","Error","statusText","devices","json","digitalSensorsResponse","digitalSensors","length","error","console","intervalId","setInterval","clearInterval","statCards","title","value","icon","size","className","fileName","_jsxFileName","lineNumber","columnNumber","color","children","src","map","card","index","sensor","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","label","Object","keys","filter","key","replace","str","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/Welcome/Welcome.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Thermometer, Droplets, Activity, Server, AlertCircle } from \"lucide-react\";\r\n\r\n// Base URL for the API\r\nconst API_BASE_URL = 'https://sensorium-api.vercel.app/api';\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [overviewData, setOverviewData] = useState({\r\n    totalDevices: 0,\r\n    activeSensors: 0,\r\n    avgTemperature: null,\r\n    avgHumidity: null,\r\n    activeAlerts: 0,\r\n  });\r\n  const [sensorData, setSensorData] = useState([]);\r\n\r\n  // Function to fetch all data from the APIs\r\n  const fetchAllData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Fetch overview data (devices)\r\n      const devicesResponse = await fetch(`${API_BASE_URL}/live/devices`);\r\n      if (!devicesResponse.ok) {\r\n        throw new Error(`Failed to fetch devices: ${devicesResponse.statusText}`);\r\n      }\r\n      const devices = await devicesResponse.json();\r\n\r\n      // Fetch only digital sensor data as requested\r\n      const digitalSensorsResponse = await fetch(`${API_BASE_URL}/live/digital-sensors`);\r\n      if (!digitalSensorsResponse.ok) {\r\n        throw new Error(`Failed to fetch digital sensors: ${digitalSensorsResponse.statusText}`);\r\n      }\r\n      \r\n      const digitalSensors = await digitalSensorsResponse.json();\r\n\r\n      // Set sensor data to only digital sensors\r\n      setSensorData(digitalSensors);\r\n\r\n      // Calculate aggregated values based on digital sensors only\r\n      const totalDevices = devices.length;\r\n      const activeSensors = digitalSensors.length;\r\n\r\n      // Update the state with fetched data\r\n      setOverviewData({\r\n        totalDevices,\r\n        activeSensors,\r\n        avgTemperature: null, // No temperature data from digital sensors\r\n        avgHumidity: null, // No humidity data from digital sensors\r\n        activeAlerts: 2, // Placeholder as there's no clear API endpoint for alerts\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Initial data fetch\r\n    fetchAllData();\r\n\r\n    // Set up auto-refresh every 5 seconds\r\n    const intervalId = setInterval(() => {\r\n      fetchAllData();\r\n    }, 5000);\r\n\r\n    // Clean up the interval on component unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const statCards = [\r\n    {\r\n      title: \"Total Devices\",\r\n      value: overviewData.totalDevices,\r\n      icon: <Server size={32} className=\"text-blue-500\" />,\r\n      color: \"blue\",\r\n    },\r\n    {\r\n      title: \"Active Sensors\",\r\n      value: overviewData.activeSensors,\r\n      icon: <Activity size={32} className=\"text-green-500\" />,\r\n      color: \"green\",\r\n    },\r\n    {\r\n      title: \"Avg. Temperature\",\r\n      value: overviewData.avgTemperature !== null ? `${overviewData.avgTemperature}Â°C` : \"N/A\",\r\n      icon: <Thermometer size={32} className=\"text-red-500\" />,\r\n      color: \"red\",\r\n    },\r\n    {\r\n      title: \"Avg. Humidity\",\r\n      value: overviewData.avgHumidity !== null ? `${overviewData.avgHumidity}%` : \"N/A\",\r\n      icon: <Droplets size={32} className=\"text-purple-500\" />,\r\n      color: \"purple\",\r\n    },\r\n    {\r\n      title: \"Active Alerts\",\r\n      value: overviewData.activeAlerts,\r\n      icon: <AlertCircle size={32} className=\"text-yellow-500\" />,\r\n      color: \"yellow\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-8 font-sans\">\r\n      <script src=\"https://cdn.tailwindcss.com\"></script>\r\n      <div className=\"max-w-7xl mx-auto space-y-8\">\r\n        {/* Header */}\r\n        <header className=\"bg-white rounded-xl shadow-sm p-6 sm:p-8 flex flex-col sm:flex-row items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">Welcome to Sensorium</h1>\r\n            <p className=\"text-gray-500 mt-1\">Your centralized hub for real-time sensor monitoring.</p>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Loading State */}\r\n        {loading ? (\r\n          <div className=\"text-center py-20\">\r\n            <h2 className=\"text-2xl font-semibold text-gray-700\">Loading live data...</h2>\r\n            <p className=\"text-gray-500 mt-2\">This may take a moment.</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {/* System Overview Section */}\r\n            <section>\r\n              <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">System Overview</h2>\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-6\">\r\n                {statCards.map((card, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"bg-white rounded-xl shadow-sm p-6 flex flex-col items-start\"\r\n                  >\r\n                    <div className={`p-3 rounded-full bg-${card.color}-100`}>\r\n                      {card.icon}\r\n                    </div>\r\n                    <p className=\"text-gray-500 mt-4 text-sm font-medium\">{card.title}</p>\r\n                    <h3 className=\"text-2xl font-bold text-gray-900 mt-1\">{card.value}</h3>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </section>\r\n\r\n            {/* Detailed Sensor Cards Section */}\r\n            <section>\r\n              <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">Live Digital Sensor Data</h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {sensorData.map((sensor, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"bg-white rounded-xl shadow-sm p-6 border-l-4 border-green-500\"\r\n                  >\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"20\"\r\n                          height=\"20\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          stroke=\"#10B981\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          className=\"lucide lucide-check-circle\"\r\n                        >\r\n                          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" />\r\n                          <polyline points=\"22 4 12 14.01 9 11.01\" />\r\n                        </svg>\r\n                        <span className=\"text-lg font-semibold text-gray-800\">{sensor.label}</span>\r\n                      </div>\r\n                    </div>\r\n                    {/* Display all key-value pairs from the sensor object dynamically */}\r\n                    <div className=\"space-y-4\">\r\n                      {Object.keys(sensor).filter(key => key !== 'label' && key !== 'deviceId' && key !== 'id' && key !== 'lastUpdated' && key !== 'type').map(key => (\r\n                        <div key={key} className=\"flex items-center justify-between\">\r\n                          <p className=\"text-gray-500\">{key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}</p>\r\n                          <span className=\"font-bold text-gray-900\">{typeof sensor[key] === 'object' && sensor[key] !== null ? `${sensor[key].value}` : sensor[key]}</span>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </section>\r\n          </>\r\n        )}\r\n\r\n        {/* Placeholder Section (from original code) */}\r\n        <div className=\"bg-white rounded-xl shadow-sm p-6 sm:p-8 text-center mt-8\">\r\n          <h3 className=\"text-xl font-semibold text-gray-800\">Detailed Reports and Analytics</h3>\r\n          <p className=\"text-gray-500 mt-2\">Navigate to the reports section to view historical data and detailed graphs.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}