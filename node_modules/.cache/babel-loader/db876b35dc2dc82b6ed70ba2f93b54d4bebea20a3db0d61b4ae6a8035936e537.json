{"ast":null,"code":"import React,{useState,useEffect}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import'./SensorChart.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_HISTORY_URL='http://127.0.0.1:5000/api/sensor-history';const COLORS={temperature:'#00509d',humidity:'#007ba7'};const SensorChart=_ref=>{let{sensorName,timeRange}=_ref;const[history,setHistory]=useState([]);useEffect(()=>{const fetchHistory=async()=>{try{const url=\"\".concat(API_HISTORY_URL,\"?sensor_name=\").concat(sensorName,\"&time_range=\").concat(timeRange);const response=await fetch(url);const data=await response.json();setHistory(data);}catch(error){console.error(\"Failed to fetch history:\",error);}};fetchHistory();},[sensorName,timeRange]);const formatTimestamp=timestamp=>{const date=new Date(timestamp);if(timeRange==='daily'){return date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});}else if(timeRange==='weekly'){return date.toLocaleDateString([],{weekday:'short'});}else{return date.toLocaleDateString([],{month:'short',day:'numeric'});}};return/*#__PURE__*/_jsx(\"div\",{className:\"sensor-chart-container\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:history,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#e0e0e0\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"timestamp\",tickFormatter:formatTimestamp,stroke:\"#bdbdbd\"}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#bdbdbd\"}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{wrapperStyle:{paddingTop:'10px',fontSize:'12px'}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"temperature\",stroke:COLORS.temperature,name:\"Temperature\",strokeWidth:2,dot:false}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"humidity\",stroke:COLORS.humidity,name:\"Humidity\",strokeWidth:2,dot:false})]})})});};export default SensorChart;","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","API_HISTORY_URL","COLORS","temperature","humidity","SensorChart","_ref","sensorName","timeRange","history","setHistory","fetchHistory","url","concat","response","fetch","data","json","error","console","formatTimestamp","timestamp","date","Date","toLocaleTimeString","hour","minute","toLocaleDateString","weekday","month","day","className","children","width","height","strokeDasharray","stroke","dataKey","tickFormatter","wrapperStyle","paddingTop","fontSize","type","name","strokeWidth","dot"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/SensorChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\nimport './SensorChart.css';\r\n\r\nconst API_HISTORY_URL = 'http://127.0.0.1:5000/api/sensor-history';\r\nconst COLORS = {\r\n  temperature: '#00509d',\r\n  humidity: '#007ba7',\r\n};\r\n\r\nconst SensorChart = ({ sensorName, timeRange }) => {\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n      try {\r\n        const url = `${API_HISTORY_URL}?sensor_name=${sensorName}&time_range=${timeRange}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setHistory(data);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch history:\", error);\r\n      }\r\n    };\r\n    fetchHistory();\r\n  }, [sensorName, timeRange]);\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    if (timeRange === 'daily') {\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    } else if (timeRange === 'weekly') {\r\n      return date.toLocaleDateString([], { weekday: 'short' });\r\n    } else {\r\n      return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sensor-chart-container\">\r\n      <ResponsiveContainer width=\"100%\" height={250}>\r\n        <LineChart data={history}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\r\n          <XAxis dataKey=\"timestamp\" tickFormatter={formatTimestamp} stroke=\"#bdbdbd\" />\r\n          <YAxis stroke=\"#bdbdbd\" />\r\n          <Tooltip />\r\n          <Legend wrapperStyle={{ paddingTop: '10px', fontSize: '12px' }} />\r\n          <Line type=\"monotone\" dataKey=\"temperature\" stroke={COLORS.temperature} name=\"Temperature\" strokeWidth={2} dot={false} />\r\n          <Line type=\"monotone\" dataKey=\"humidity\" stroke={COLORS.humidity} name=\"Humidity\" strokeWidth={2} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}