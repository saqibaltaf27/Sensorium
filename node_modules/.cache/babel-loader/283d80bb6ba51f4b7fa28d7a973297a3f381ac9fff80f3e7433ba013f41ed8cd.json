{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.Saqib\\\\OneDrive - gms-world.com\\\\Documents\\\\GitHub\\\\TempMonitoringControlPanel\\\\src\\\\components\\\\Reports\\\\ReportsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { Thermometer, Droplets, Activity, Cloud, Calendar, Server, Cpu } from \"lucide-react\"; // ✅ icons\nimport \"./ReportsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportPage = ({\n  period\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [sensors, setSensors] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\n  const [selectedSensor, setSelectedSensor] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  // Fetch devices\n  useEffect(() => {\n    axios.get(\"https://sensorium-api.vercel.app/api/devices\").then(res => {\n      setDevices(res.data);\n    });\n  }, []);\n\n  // Fetch sensors when device changes\n  useEffect(() => {\n    if (selectedDevice) {\n      axios.get(`https://sensorium-api.vercel.app/api/sensors/${selectedDevice}`).then(res => {\n        setSensors(res.data);\n      });\n    } else {\n      setSensors([]);\n      setSelectedSensor(\"\");\n    }\n  }, [selectedDevice]);\n\n  // Auto-fetch report when device/sensor/period changes\n  useEffect(() => {\n    if (selectedDevice && selectedSensor) {\n      axios.get(`https://sensorium-api.vercel.app/api/reports?deviceId=${selectedDevice}&sensorId=${selectedSensor}&period=${period}`).then(res => {\n        // ✅ If daily, filter for current date (midnight → now)\n        if (period === \"daily\") {\n          const today = new Date().toISOString().split(\"T\")[0]; // YYYY-MM-DD\n          const filtered = res.data.filter(row => new Date(row.period).toISOString().split(\"T\")[0] === today);\n          setData(filtered);\n        } else {\n          setData(res.data);\n        }\n      });\n    }\n  }, [selectedDevice, selectedSensor, period]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"report-title flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        className: \"w-6 h-6 text-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), \"Reports - \", period]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-box\",\n        children: [/*#__PURE__*/_jsxDEV(Server, {\n          className: \"w-5 h-5 text-gray-500 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          value: selectedDevice,\n          onChange: e => setSelectedDevice(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), devices.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.deviceId,\n            children: d.deviceName\n          }, d.deviceId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-box\",\n        children: [/*#__PURE__*/_jsxDEV(Cpu, {\n          className: \"w-5 h-5 text-gray-500 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          value: selectedSensor,\n          onChange: e => setSelectedSensor(e.target.value),\n          disabled: !selectedDevice,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Sensor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), sensors.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s.sensorId,\n            children: s.label || `Sensor ${s.sensorId}`\n          }, s.sensorId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"report-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), \" Period\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), \" Min Temp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), \" Avg Temp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Thermometer, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), \" Max Temp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Droplets, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), \" Avg Humidity\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Activity, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), \" Avg Heat Index\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(Cloud, {\n                className: \"inline w-4 h-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), \" Avg Dew Point\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: period === \"daily\" ? new Date(row.period).toLocaleTimeString() : new Date(row.period).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.minTemp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgTemp !== null ? row.avgTemp.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.maxTemp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgHumidity !== null ? row.avgHumidity.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgHeatIndex !== null ? row.avgHeatIndex.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgDewPoint !== null ? row.avgDewPoint.toFixed(2) : \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"period\",\n            tickFormatter: date => period === \"daily\" ? new Date(date).toLocaleTimeString(\"en-GB\") : new Date(date).toLocaleDateString(\"en-GB\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            labelFormatter: date => period === \"daily\" ? new Date(date).toLocaleTimeString(\"en-GB\") : new Date(date).toLocaleDateString(\"en-GB\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgTemp\",\n            stroke: \"#007bff\",\n            name: \"Avg Temp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgHumidity\",\n            stroke: \"#28a745\",\n            name: \"Avg Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgHeatIndex\",\n            stroke: \"#ff5722\",\n            name: \"Avg Heat Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"avgDewPoint\",\n            stroke: \"#6f42c1\",\n            name: \"Avg Dew Point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportPage, \"ptAPK4avbEYsB7+4ohEBQ+HSRP0=\");\n_c = ReportPage;\nexport default ReportPage;\nvar _c;\n$RefreshReg$(_c, \"ReportPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Thermometer","Droplets","Activity","Cloud","Calendar","Server","Cpu","jsxDEV","_jsxDEV","ReportPage","period","_s","devices","setDevices","sensors","setSensors","selectedDevice","setSelectedDevice","selectedSensor","setSelectedSensor","data","setData","get","then","res","today","Date","toISOString","split","filtered","filter","row","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","d","deviceId","deviceName","disabled","s","sensorId","label","length","idx","toLocaleTimeString","toLocaleDateString","minTemp","avgTemp","toFixed","maxTemp","avgHumidity","avgHeatIndex","avgDewPoint","width","height","strokeDasharray","dataKey","tickFormatter","date","labelFormatter","type","stroke","name","_c","$RefreshReg$"],"sources":["C:/Users/Mr.Saqib/OneDrive - gms-world.com/Documents/GitHub/TempMonitoringControlPanel/src/components/Reports/ReportsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport {\r\n  Thermometer,\r\n  Droplets,\r\n  Activity,\r\n  Cloud,\r\n  Calendar,\r\n  Server,\r\n  Cpu,\r\n} from \"lucide-react\"; // ✅ icons\r\nimport \"./ReportsPage.css\";\r\n\r\nconst ReportPage = ({ period }) => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [sensors, setSensors] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(\"\");\r\n  const [selectedSensor, setSelectedSensor] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n\r\n  // Fetch devices\r\n  useEffect(() => {\r\n    axios.get(\"https://sensorium-api.vercel.app/api/devices\").then((res) => {\r\n      setDevices(res.data);\r\n    });\r\n  }, []);\r\n\r\n  // Fetch sensors when device changes\r\n  useEffect(() => {\r\n    if (selectedDevice) {\r\n      axios\r\n        .get(`https://sensorium-api.vercel.app/api/sensors/${selectedDevice}`)\r\n        .then((res) => {\r\n          setSensors(res.data);\r\n        });\r\n    } else {\r\n      setSensors([]);\r\n      setSelectedSensor(\"\");\r\n    }\r\n  }, [selectedDevice]);\r\n\r\n  // Auto-fetch report when device/sensor/period changes\r\n  useEffect(() => {\r\n    if (selectedDevice && selectedSensor) {\r\n      axios\r\n        .get(\r\n          `https://sensorium-api.vercel.app/api/reports?deviceId=${selectedDevice}&sensorId=${selectedSensor}&period=${period}`\r\n        )\r\n        .then((res) => {\r\n          // ✅ If daily, filter for current date (midnight → now)\r\n          if (period === \"daily\") {\r\n            const today = new Date().toISOString().split(\"T\")[0]; // YYYY-MM-DD\r\n            const filtered = res.data.filter(\r\n              (row) => new Date(row.period).toISOString().split(\"T\")[0] === today\r\n            );\r\n            setData(filtered);\r\n          } else {\r\n            setData(res.data);\r\n          }\r\n        });\r\n    }\r\n  }, [selectedDevice, selectedSensor, period]);\r\n\r\n  return (\r\n    <div className=\"report-container\">\r\n      <h2 className=\"report-title flex items-center gap-2\">\r\n        <Calendar className=\"w-6 h-6 text-blue-600\" />\r\n        Reports - {period}\r\n      </h2>\r\n\r\n      {/* Filters */}\r\n      <div className=\"filters\">\r\n        <div className=\"filter-box\">\r\n          <Server className=\"w-5 h-5 text-gray-500 mr-2\" />\r\n          <select\r\n            className=\"dropdown\"\r\n            value={selectedDevice}\r\n            onChange={(e) => setSelectedDevice(e.target.value)}\r\n          >\r\n            <option value=\"\">Select Device</option>\r\n            {devices.map((d) => (\r\n              <option key={d.deviceId} value={d.deviceId}>\r\n                {d.deviceName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"filter-box\">\r\n          <Cpu className=\"w-5 h-5 text-gray-500 mr-2\" />\r\n          <select\r\n            className=\"dropdown\"\r\n            value={selectedSensor}\r\n            onChange={(e) => setSelectedSensor(e.target.value)}\r\n            disabled={!selectedDevice}\r\n          >\r\n            <option value=\"\">Select Sensor</option>\r\n            {sensors.map((s) => (\r\n              <option key={s.sensorId} value={s.sensorId}>\r\n                {s.label || `Sensor ${s.sensorId}`}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      {data.length > 0 && (\r\n        <div className=\"table-wrapper\">\r\n          <table className=\"report-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Calendar className=\"inline w-4 h-4 mr-1\" /> Period\r\n                </th>\r\n                <th>\r\n                  <Thermometer className=\"inline w-4 h-4 mr-1\" /> Min Temp\r\n                </th>\r\n                <th>\r\n                  <Thermometer className=\"inline w-4 h-4 mr-1\" /> Avg Temp\r\n                </th>\r\n                <th>\r\n                  <Thermometer className=\"inline w-4 h-4 mr-1\" /> Max Temp\r\n                </th>\r\n                <th>\r\n                  <Droplets className=\"inline w-4 h-4 mr-1\" /> Avg Humidity\r\n                </th>\r\n                <th>\r\n                  <Activity className=\"inline w-4 h-4 mr-1\" /> Avg Heat Index\r\n                </th>\r\n                <th>\r\n                  <Cloud className=\"inline w-4 h-4 mr-1\" /> Avg Dew Point\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, idx) => (\r\n                <tr key={idx}>\r\n                  <td>\r\n                    {period === \"daily\"\r\n                      ? new Date(row.period).toLocaleTimeString()\r\n                      : new Date(row.period).toLocaleDateString()}\r\n                  </td>\r\n                  <td>{row.minTemp}</td>\r\n                  <td>\r\n                    {row.avgTemp !== null ? row.avgTemp.toFixed(2) : \"-\"}\r\n                  </td>\r\n                  <td>{row.maxTemp}</td>\r\n                  <td>\r\n                    {row.avgHumidity !== null\r\n                      ? row.avgHumidity.toFixed(2)\r\n                      : \"-\"}\r\n                  </td>\r\n                  <td>\r\n                    {row.avgHeatIndex !== null\r\n                      ? row.avgHeatIndex.toFixed(2)\r\n                      : \"-\"}\r\n                  </td>\r\n                  <td>\r\n                    {row.avgDewPoint !== null\r\n                      ? row.avgDewPoint.toFixed(2)\r\n                      : \"-\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Graph */}\r\n      {data.length > 0 && (\r\n        <div className=\"chart-wrapper\">\r\n          <ResponsiveContainer width=\"100%\" height={400}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                dataKey=\"period\"\r\n                tickFormatter={(date) =>\r\n                  period === \"daily\"\r\n                    ? new Date(date).toLocaleTimeString(\"en-GB\")\r\n                    : new Date(date).toLocaleDateString(\"en-GB\")\r\n                }\r\n              />\r\n              <YAxis />\r\n              <Tooltip\r\n                labelFormatter={(date) =>\r\n                  period === \"daily\"\r\n                    ? new Date(date).toLocaleTimeString(\"en-GB\")\r\n                    : new Date(date).toLocaleDateString(\"en-GB\")\r\n                }\r\n              />\r\n              <Legend />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgTemp\"\r\n                stroke=\"#007bff\"\r\n                name=\"Avg Temp\"\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgHumidity\"\r\n                stroke=\"#28a745\"\r\n                name=\"Avg Humidity\"\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgHeatIndex\"\r\n                stroke=\"#ff5722\"\r\n                name=\"Avg Heat Index\"\r\n              />\r\n              <Line\r\n                type=\"monotone\"\r\n                dataKey=\"avgDewPoint\"\r\n                stroke=\"#6f42c1\"\r\n                name=\"Avg Dew Point\"\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}